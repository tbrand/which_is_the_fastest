# Use latest ubuntu LTS (18.04)
dist: bionic

services:
  - docker # Use docker to containerize frameworks
  - postgresql # Use postgresql to store data

# This tool is written in crystal
language: crystal

env:
  global:
    - DATABASE_URL=postgresql://postgres@localhost/benchmark
  jobs:
      - FRAMEWORK=c.agoo-c
      - FRAMEWORK=c.kore
      - FRAMEWORK=clojure.coast
      - FRAMEWORK=cpp.drogon
      - FRAMEWORK=cpp.evhtp
      - FRAMEWORK=crystal.amber
      - FRAMEWORK=crystal.athena
      - FRAMEWORK=crystal.grip
      - FRAMEWORK=crystal.kemal
      - FRAMEWORK=crystal.lucky
      - FRAMEWORK=crystal.onyx
      - FRAMEWORK=crystal.orion
      - FRAMEWORK=crystal.router.cr
      - FRAMEWORK=crystal.spider-gazelle
      - FRAMEWORK=crystal.toro
      - FRAMEWORK=csharp.aspnetcore
      - FRAMEWORK=dart.aqueduct
      - FRAMEWORK=elixir.cowboy
      - FRAMEWORK=elixir.cowboy_stream
      - FRAMEWORK=elixir.phoenix
      - FRAMEWORK=elixir.plug
      - FRAMEWORK=fsharp.suave
      - FRAMEWORK=go.aero
      - FRAMEWORK=go.air
      - FRAMEWORK=go.atreugo
      - FRAMEWORK=go.beego
      - FRAMEWORK=go.chi
      - FRAMEWORK=go.echo
      - FRAMEWORK=go.fasthttp
      - FRAMEWORK=go.fasthttprouter
      - FRAMEWORK=go.fiber
      - FRAMEWORK=go.gf
      - FRAMEWORK=go.gin
      - FRAMEWORK=go.gorilla-mux
      - FRAMEWORK=go.goroute
      - FRAMEWORK=go.gorouter-fasthttp
      - FRAMEWORK=go.gorouter
      - FRAMEWORK=go.gramework
      - FRAMEWORK=go.httprouter
      - FRAMEWORK=go.kami
      - FRAMEWORK=go.mars
      - FRAMEWORK=go.router
      - FRAMEWORK=go.rte
      - FRAMEWORK=go.violetear
      - FRAMEWORK=go.webgo
      - FRAMEWORK=java.act
      - FRAMEWORK=java.javalin
      - FRAMEWORK=java.micronaut
      - FRAMEWORK=java.rapidoid
      - FRAMEWORK=java.spring-boot
      - FRAMEWORK=java.spring-framework
      - FRAMEWORK=javascript.0http
      - FRAMEWORK=javascript.express
      - FRAMEWORK=javascript.fastify
      - FRAMEWORK=javascript.foxify
      - FRAMEWORK=javascript.hapi
      - FRAMEWORK=javascript.iotjs-express
      - FRAMEWORK=javascript.koa
      - FRAMEWORK=javascript.moleculer
      - FRAMEWORK=javascript.muneem
      - FRAMEWORK=javascript.nanoexpress-pro
      - FRAMEWORK=javascript.nanoexpress
      - FRAMEWORK=javascript.polka
      - FRAMEWORK=javascript.polkadot
      - FRAMEWORK=javascript.rayo
      - FRAMEWORK=javascript.restana
      - FRAMEWORK=javascript.restify
      - FRAMEWORK=javascript.sifrr
      - FRAMEWORK=javascript.turbo_polka
      - FRAMEWORK=javascript.feathersjs
      - FRAMEWORK=julia.merly
      - FRAMEWORK=kotlin.ktor
      - FRAMEWORK=nim.httpbeast
      - FRAMEWORK=nim.jester
      - FRAMEWORK=perl.dancer2
      - FRAMEWORK=php.basicphp
      - FRAMEWORK=php.chubbyphp
      - FRAMEWORK=php.hamlet
      - FRAMEWORK=php.hyperf
      - FRAMEWORK=php.imi
      - FRAMEWORK=php.laminas
      - FRAMEWORK=php.laravel
      - FRAMEWORK=php.lumen
      - FRAMEWORK=php.mezzio
      - FRAMEWORK=php.one-fpm
      - FRAMEWORK=php.one
      - FRAMEWORK=php.phalcon
      - FRAMEWORK=php.slim
      - FRAMEWORK=php.spiral
      - FRAMEWORK=php.sw-fw-less
      - FRAMEWORK=php.swoft
      - FRAMEWORK=php.symfony
      - FRAMEWORK=php.ubiquity
      - FRAMEWORK=php.workerman
      - FRAMEWORK=php.yii
      - FRAMEWORK=python.aiohttp
      - FRAMEWORK=python.apidaora
      - FRAMEWORK=python.asgineer
      - FRAMEWORK=python.blacksheep
      - FRAMEWORK=python.bottle
      - FRAMEWORK=python.cherrypy
      - FRAMEWORK=python.clastic
      - FRAMEWORK=python.cyclone
      - FRAMEWORK=python.django
      - FRAMEWORK=python.emmett
      - FRAMEWORK=python.falcon
      - FRAMEWORK=python.fastapi
      - FRAMEWORK=python.flask
      - FRAMEWORK=python.hug
      - FRAMEWORK=python.klein
      - FRAMEWORK=python.masonite
      - FRAMEWORK=python.molten
      - FRAMEWORK=python.nameko
      - FRAMEWORK=python.pyramid
      - FRAMEWORK=python.quart
      - FRAMEWORK=python.responder
      - FRAMEWORK=python.sanic
      - FRAMEWORK=python.starlette
      - FRAMEWORK=python.tornado
      - FRAMEWORK=ruby.agoo
      - FRAMEWORK=ruby.camping
      - FRAMEWORK=ruby.cuba
      - FRAMEWORK=ruby.flame
      - FRAMEWORK=ruby.grape
      - FRAMEWORK=ruby.hanami-api
      - FRAMEWORK=ruby.hanami
      - FRAMEWORK=ruby.rack-routing
      - FRAMEWORK=ruby.rails
      - FRAMEWORK=ruby.roda
      - FRAMEWORK=ruby.sinatra
      - FRAMEWORK=ruby.syro
      - FRAMEWORK=rust.gotham
      - FRAMEWORK=rust.iron
      - FRAMEWORK=rust.nickel
      - FRAMEWORK=scala.akkahttp
      - FRAMEWORK=scala.http4s
      - FRAMEWORK=swift.kitura-nio
      - FRAMEWORK=swift.kitura
      - FRAMEWORK=swift.perfect
      - FRAMEWORK=swift.swifter
      - FRAMEWORK=swift.vapor

before_script:
  - psql -c 'CREATE DATABASE benchmark;' -U postgres;
  - psql -U postgres -d benchmark < .ci/dump.sql

script:
  - shards install
  - shards build
  - bin/make config --without-sieger --keep

  # Create logs directory for neph
  - mkdir -p .neph/${FRAMEWORK}
  - travis_wait 15 bin/neph ${FRAMEWORK} --mode=CI

  - crystal spec

# Push on docker registry if tests are OK
# This does not work on forks
after_success: if [ ${TRAVIS_REPO_SLUG} == "the-benchmarker/web-frameworks" ]; then bash .ci/docker_release.sh ; fi

notifications:
  email: false
