name: CI

on:
  pull_request:
    types:
      - opened
      - edited
      - synchronize
  schedule:
    - cron: 0 0 * * 3
jobs:
  matrix:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
        with:  
          fetch-depth: 2
      - uses: actions/setup-ruby@v1
      - name: Install deps
        run: bundle install --jobs 4 --retry 3
      - id: set-matrix
        run: echo "::set-output name=matrix::$(bundle exec rake ci:matrix)"
        env:
          BASE_COMMIT: ${{ github.event.pull_request.base.sha }}
          LAST_COMMIT: ${{ github.event.pull_request.head.sha }}

    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}

  test:
    needs: matrix

    runs-on: ubuntu-latest

    
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          # Maps tcp port 5432 on service container to the host
          - 5432:5432
          
    strategy:
      fail-fast: false
      matrix: ${{fromJson(needs.matrix.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-ruby@v1
      - name: Install deps
        run: bundle install --jobs 4 --retry 3

      - name: Configure
        run: bundle exec rake config

      - name: Setup
        run: |
          cd ${{ matrix.directory }} 
          make build  -f .Makefile

      - name: Test
        run: bundle exec rspec .spec
        env:
          FRAMEWORK: ${{ matrix.framework }}

      - name: Collect
        run: |
          sudo apt-get install wrk
          make -f ${FRAMEWORK}/.Makefile collect
        env:
          FRAMEWORK: ${{ matrix.framework }}
          DATABASE_URL: postgresql://postgres@localhost/postgres
          DURATION: 5
          CONCURRENCIES: 10
          ROUTES: GET:/
