main:
  depends_on:
    - ruby
    - python
    - node
    - php
    - go

ruby:
  depends_on:
    - sinatra

python:
  depends_on:
    - flask
    #- tornado
    - quart
    - bottle
    #- vibora
    #- falcon
    #- sanic
    #- japronto
    # # - starlette => TODO fixme -> not working
    #- cyclone
    # - responder => TODO fixme -> not working
    # - django => TODO fixme -> disabled since I have a 400

node:
  depends_on:
    - express
    - fastify
    # - foxify => disabled because of required node >= 8.12
    - hapi
    - koa
    - polka
    - rayo
    - restana
    - restify

go:
  depends_on:
    - gf

php:
  depends_on:
    - slim
    - symfony
    - laravel

sinatra:
  commands:
    - bin/droplet create -l ruby -f sinatra -w
    - bin/droplet exec -l ruby -f sinatra 'bundle install --without development test'
    - bin/droplet exec -l ruby -f sinatra  'bundle exec puma -p 80 -e production -w $(nproc) -d'
    - bin/benchmark extract -l ruby -f sinatra
    - doctl compute droplet delete sinatra --force

flask:
  commands:
    - bin/droplet create -l python -f flask -w
    - bin/droplet exec -l python -f flask 'pip install -r requirements.txt -U'
    - bin/droplet exec -l python -f flask  'gunicorn --log-level warning --bind 0.0.0.0:80 --reuse-port --workers $(nproc) --worker-class meinheld.gmeinheld.MeinheldWorker server:app --daemon'
    - bin/benchmark extract -l python -f flask
    - doctl compute droplet delete flask --force

tornado:
  commands:
    - bin/droplet create -l python -f tornado -w
    - bin/droplet exec -l python -f tornado 'pip install -r requirements.txt -U'
    - bin/droplet exec -l python -f tornado  'nohup python3 server.py'
    - bin/benchmark extract -l python -f tornado
    - doctl compute droplet delete tornado --force

quart:
  commands:
    - bin/droplet create -l python -f quart -w
    - bin/droplet exec -l python -f quart 'pip install -r requirements.txt -U'
    - bin/droplet exec -l python -f quart  'gunicorn --log-level warning --bind 0.0.0.0:80 --reuse-port --workers $(nproc) --worker-class uvicorn.workers.UvicornWorker server:app --daemon'
    - bin/benchmark extract -l python -f quart
    - doctl compute droplet delete quart --force

django:
  commands:
    - bin/droplet create -l python -f django -w
    - bin/droplet exec -l python -f django 'pip install -r requirements.txt -U'
    - bin/droplet exec -l python -f django  'gunicorn --log-level warning --bind 0.0.0.0:80 --reuse-port --workers $(nproc) --worker-class meinheld.gmeinheld.MeinheldWorker app.wsgi --daemon'
    - bin/benchmark extract -l python -f django
    - doctl compute droplet delete django --force
bottle:
  commands:
    - bin/droplet create -l python -f bottle -w
    - bin/droplet exec -l python -f bottle 'pip install -r requirements.txt -U'
    - bin/droplet exec -l python -f bottle  'gunicorn --log-level warning --bind 0.0.0.0:80 --reuse-port --workers $(nproc) --worker-class meinheld.gmeinheld.MeinheldWorker server:app --daemon'
    - bin/benchmark extract -l python -f bottle
    - doctl compute droplet delete bottle --force


starlette:
  commands:
    - bin/droplet create -l python -f starlette -w
    - bin/droplet exec -l python -f starlette 'pip3 install -r requirements.txt -U'
    - bin/droplet exec -l python -f starlette  'gunicorn --log-level warning --bind 0.0.0.0:80 --reuse-port --workers $(nproc) --worker-class uvicorn.workers.UvicornWorker server:app --daemon'
    - bin/benchm.neph/django/log/log.errark extract -l python -f starlette
    - doctl compute droplet delete starlette --force

cyclone:
    - bin/droplet create -l python -f cyclone -w
    - bin/droplet exec -l python -f cyclone 'pip install -r requirements.txt -U'
    - bin/droplet exec -l python -f cyclone 'python server.py'
    - bin/benchm.neph/django/log/log.errark extract -l python -f cyclone
    - doctl compute droplet delete cyclone --force  

responder:
  commands:
    - bin/droplet create -l python -f responder -w
    - bin/droplet exec -l python -f responder 'pip install -r requirements.txt -U'
    - bin/droplet exec -l python -f responder  'gunicorn --log-level warning --bind 0.0.0.0:80 --reuse-port --workers $(nproc) --worker-class uvicorn.workers.UvicornWorker server:app --daemon'
    - bin/benchmark extract -l python -f responder
    - doctl compute droplet delete responder --force

django:
  commands:
    - bin/droplet create -l python -f django -w
    - bin/droplet exec -l python -f django 'pip install -r requirements.txt -U'
    - bin/droplet exec -l python -f django  'gunicorn --log-level warning --bind 0.0.0.0:80 --reuse-port --workers $(nproc) --worker-class meinheld.gmeinheld.MeinheldWorker app.wsgi --daemon'
    - bin/benchmark extract -l python -f django
    - doctl compute droplet delete django --force

express:
  commands:
    - bin/droplet create -l node -f express -w
    - bin/droplet exec -l node -f express 'npm install --production'
    - bin/droplet exec -l node -f express  'NODE_ENV=production pm2 start app.js -i $(nproc) --daemon'
    - bin/benchmark extract -l node -f express
    - doctl compute droplet delete express --force

fastify:
  commands:
    - bin/droplet create -l node -f fastify -w
    - bin/droplet exec -l node -f fastify 'npm install --production'
    - bin/droplet exec -l node -f fastify  'NODE_ENV=production pm2 start app.js -i $(nproc) --daemon'
    - bin/benchmark extract -l node -f fastify
    - doctl compute droplet delete fastify --force


foxify:
  commands:
    - bin/droplet create -l node -f foxify -w
    - bin/droplet exec -l node -f foxify 'npm install --production'
    - bin/droplet exec -l node -f foxify  'NODE_ENV=production pm2 start app.js -i $(nproc) --daemon'
    - bin/benchmark extract -l node -f foxify
    - doctl compute droplet delete foxify --force


hapi:
  commands:
    - bin/droplet create -l node -f hapi -w
    - bin/droplet exec -l node -f hapi 'npm install --production'
    - bin/droplet exec -l node -f hapi  'NODE_ENV=production pm2 start app.js -i $(nproc) --daemon'
    - sleep 1 # why ?
    - bin/benchmark extract -l node -f hapi
    - doctl compute droplet delete hapi --force


koa:
  commands:
    - bin/droplet create -l node -f koa -w
    - bin/droplet exec -l node -f koa 'npm install --production'
    - bin/droplet exec -l node -f koa  'NODE_ENV=production pm2 start app.js -i $(nproc) --daemon'
    - sleep 1 # why ?
    - bin/benchmark extract -l node -f koa
    - doctl compute droplet delete koa --force


polka:
  commands:
    - bin/droplet create -l node -f polka -w
    - bin/droplet exec -l node -f polka 'npm install --production'
    - bin/droplet exec -l node -f polka  'NODE_ENV=production pm2 start app.js -i $(nproc) --daemon'
    - sleep 1 # why ?
    - bin/benchmark extract -l node -f polka
    - doctl compute droplet delete polka --force


rayo:
  commands:
    - bin/droplet create -l node -f rayo -w
    - bin/droplet exec -l node -f rayo 'npm install --production'
    - bin/droplet exec -l node -f rayo  'NODE_ENV=production pm2 start app.js -i $(nproc) --daemon'
    - sleep 1 # why ?
    - bin/benchmark extract -l node -f rayo
    - doctl compute droplet delete rayo --force


restana:
  commands:
    - bin/droplet create -l node -f restana -w
    - bin/droplet exec -l node -f restana 'npm install --production'
    - bin/droplet exec -l node -f restana  'NODE_ENV=production pm2 start app.js -i $(nproc) --daemon'
    - sleep 1 # why ?
    - bin/benchmark extract -l node -f restana
    - doctl compute droplet delete restana --force


restify:
  commands:
    - bin/droplet create -l node -f restify -w
    - bin/droplet exec -l node -f restify 'npm install --production'
    - bin/droplet exec -l node -f restify  'NODE_ENV=production pm2 start app.js -i $(nproc) --daemon'
    - sleep 1 # I do not know why required ?
    - bin/benchmark extract -l node -f restify
    - doctl compute droplet delete restify --force


turbo_polka:
  commands:
    - bin/droplet create -l node -f turbo.polka -w
    - bin/droplet exec -l node -f turbo.polka 'npm install --production'
    - bin/droplet exec -l node -f turbo.polka  'NODE_ENV=production pm2 start app.js -i $(nproc) --daemon'
    - sleep 1 # why ?
    - bin/benchmark extract -l node -f turbo.polka
    - doctl compute droplet delete turbo.polka --force

laravel:
  commands:
    - bin/droplet create -l php -f laravel -w
    - bin/droplet exec -l php -f laravel 'composer install --no-dev --prefer-dist --classmap-authoritative'
    - bin/droplet exec -l php -f laravel 'mkdir /usr/src/app/var'
    - bin/droplet exec -l php -f laravel 'chmod 777 -R /usr/src/app/var'
    - bin/droplet exec -l php -f laravel  "sed -i 's/\;prefix.*/prefix = \/usr\/src\/app\/public/g' /etc/php/7.2/fpm/pool.d/www.conf"
    - bin/droplet exec -l php -f laravel  'service php-fpm7.2 restart'
    - bin/droplet exec -l php -f laravel  'service nginx restart'
    - bin/benchmark extract -l php -f laravel
    - doctl compute droplet delete laravel --force

slim:
  commands:
    - bin/droplet create -l php -f slim -w
    - bin/droplet exec -l php -f slim 'composer install --no-dev --prefer-dist --classmap-authoritative'
    - bin/droplet exec -l php -f slim 'mkdir /usr/src/app/var'
    - bin/droplet exec -l php -f slim 'chmod 777 -R /usr/src/app/var'
    - bin/droplet exec -l php -f slim  "sed -i 's/\;prefix.*/prefix = \/usr\/src\/app\/public/g' /etc/php/7.2/fpm/pool.d/www.conf"
    - bin/droplet exec -l php -f slim  'service php-fpm7.2 restart'
    - bin/droplet exec -l php -f slim  'service nginx restart'
    - bin/benchmark extract -l php -f slim
    - doctl compute droplet delete slim --force

symfony:
  commands:
    - bin/droplet create -l php -f symfony -w
    - bin/droplet exec -l php -f symfony 'composer install --no-dev --prefer-dist --classmap-authoritative'
    - bin/droplet exec -l php -f symfony 'mkdir -p /usr/src/app/var/log'
    - bin/droplet exec -l php -f symfony 'chmod 777 -R /usr/src/app/var/log'
    - bin/droplet exec -l php -f symfony 'mkdir -p /usr/src/app/var/cache'
    - bin/droplet exec -l php -f symfony 'chmod 777 -R /usr/src/app/var/cache'
    - bin/droplet exec -l php -f symfony  "sed -i 's/\;prefix.*/prefix = \/usr\/src\/app\/public/g' /etc/php/7.2/fpm/pool.d/www.conf"
    - bin/droplet exec -l php -f symfony  'service php-fpm7.2 restart'
    - bin/droplet exec -l php -f symfony  'service nginx restart'
    - bin/benchmark extract -l php -f symfony
    - doctl compute droplet delete symfony --force

gf:
  commads:
    - bin/benchmark compile -l go -f gf
    - bin/droplet create -l go -f gf -w -x
    
kemal:
  commads:
    - bin/benchmark compile -l crystal -f kemal
    - bin/droplet create -l crystal -f kemal -w -x
