---
version: v1.0
name: Benchmarking suite
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
execution_time_limit:
  hours: 24
blocks:
- name: setup
  dependencies: []
  task:
    jobs:
    - name: setup
      commands:
      - checkout
      - cache store $SEMAPHORE_GIT_SHA .
      - sudo apt-get update
      - sudo apt-get install build-essential libssl-dev git -y
      - git clone https://github.com/wg/wrk.git wrk
      - cd wrk && make
      - cache store wrk wrk
      - bundle config path .cache
      - bundle install
      - cache store built-in .cache
      - bundle exec rake config
- name: javascript
  dependencies:
  - setup
  run:
    when: change_in('/javascript/','data.json')
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: setup
      commands:
      - checkout
- name: 0http
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/0http','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: 0http
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/0http/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/0http/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
    - name: uwebsockets
      commands:
      - make  -f javascript/0http/.Makefile build.uwebsockets
      - bundle exec rspec .spec
      - make  -f javascript/0http/.Makefile collect.uwebsockets
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: uwebsockets
- name: express
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/express','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: express
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/express/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/express/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: fastify
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/fastify','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: fastify
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/fastify/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/fastify/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: feathersjs
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/feathersjs','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: feathersjs
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/feathersjs/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/feathersjs/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: foxify
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/foxify','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: foxify
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/foxify/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/foxify/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: fyrejet
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/fyrejet','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: fyrejet
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/fyrejet/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/fyrejet/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
    - name: uwebsockets
      commands:
      - make  -f javascript/fyrejet/.Makefile build.uwebsockets
      - bundle exec rspec .spec
      - make  -f javascript/fyrejet/.Makefile collect.uwebsockets
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: uwebsockets
- name: hapi
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/hapi','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: hapi
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/hapi/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/hapi/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: iotjs-express
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/iotjs-express','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: iotjs-express
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/iotjs-express/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/iotjs-express/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: koa
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/koa','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: koa
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/koa/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/koa/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: moleculer
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/moleculer','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: moleculer
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/moleculer/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/moleculer/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: muneem
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/muneem','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: muneem
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/muneem/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/muneem/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: nanoexpress
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/nanoexpress','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: nanoexpress
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: uwebsockets
      commands:
      - make  -f javascript/nanoexpress/.Makefile build.uwebsockets
      - bundle exec rspec .spec
      - make  -f javascript/nanoexpress/.Makefile collect.uwebsockets
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: uwebsockets
- name: naturaljs-router
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/naturaljs-router','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: naturaljs-router
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: uwebsockets
      commands:
      - make  -f javascript/naturaljs-router/.Makefile build.uwebsockets
      - bundle exec rspec .spec
      - make  -f javascript/naturaljs-router/.Makefile collect.uwebsockets
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: uwebsockets
- name: nestjs-express
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/nestjs-express','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: nestjs-express
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/nestjs-express/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/nestjs-express/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: nestjs-fastify
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/nestjs-fastify','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: nestjs-fastify
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/nestjs-fastify/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/nestjs-fastify/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: polka
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/polka','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: polka
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/polka/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/polka/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: polkadot
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/polkadot','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: polkadot
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/polkadot/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/polkadot/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: rayo
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/rayo','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: rayo
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/rayo/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/rayo/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: restana
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/restana','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: restana
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/restana/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/restana/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: restify
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/restify','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: restify
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/restify/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/restify/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: sails
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/sails','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: sails
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/sails/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/sails/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: sifrr
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/sifrr','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: sifrr
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: uwebsockets
      commands:
      - make  -f javascript/sifrr/.Makefile build.uwebsockets
      - bundle exec rspec .spec
      - make  -f javascript/sifrr/.Makefile collect.uwebsockets
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: uwebsockets
- name: tinyhttp
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/tinyhttp','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: tinyhttp
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/tinyhttp/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/tinyhttp/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: ruby
  dependencies:
  - setup
  run:
    when: change_in('/ruby/','data.json')
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: setup
      commands:
      - checkout
- name: agoo
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/agoo','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: agoo
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: agoo
      commands:
      - make  -f ruby/agoo/.Makefile build.agoo
      - bundle exec rspec .spec
      - make  -f ruby/agoo/.Makefile collect.agoo
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: agoo
- name: camping
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/camping','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: camping
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/camping/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/camping/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/camping/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/camping/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/camping/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/camping/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: cuba
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/cuba','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: cuba
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/cuba/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/cuba/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/cuba/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/cuba/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/cuba/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/cuba/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: grape
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/grape','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: grape
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/grape/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/grape/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/grape/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/grape/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/grape/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/grape/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: hanami-api
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/hanami-api','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: hanami-api
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/hanami-api/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/hanami-api/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/hanami-api/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/hanami-api/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/hanami-api/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/hanami-api/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: rack-routing
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/rack-routing','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: rack-routing
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/rack-routing/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/rack-routing/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/rack-routing/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/rack-routing/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/rack-routing/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/rack-routing/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: rack_app
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/rack_app','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: rack_app
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/rack_app/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/rack_app/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/rack_app/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/rack_app/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/rack_app/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/rack_app/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: rails
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/rails','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: rails
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/rails/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/rails/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/rails/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/rails/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/rails/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/rails/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: roda
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/roda','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: roda
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/roda/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/roda/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/roda/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/roda/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/roda/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/roda/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: sinatra
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/sinatra','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: sinatra
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/sinatra/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/sinatra/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/sinatra/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/sinatra/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/sinatra/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/sinatra/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: syro
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/syro','data.json')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: syro
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/syro/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/syro/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/syro/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/syro/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/syro/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/syro/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
