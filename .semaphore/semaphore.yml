---
version: v1.0
name: Benchmarking suite
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
execution_time_limit:
  hours: 24
blocks:
- name: setup
  dependencies: []
  task:
    jobs:
    - name: setup
      commands:
      - checkout
      - cache store $SEMAPHORE_GIT_SHA .
      - sudo apt-get update
      - sudo apt-get install build-essential libssl-dev git -y
      - git clone https://github.com/wg/wrk.git wrk
      - cd wrk && make
      - cache store wrk wrk
      - bundle config path .cache
      - bundle install
      - cache store built-in .cache
      - bundle exec rake config
- name: javascript
  dependencies:
  - setup
  run:
    when: change_in('/javascript/')
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: setup
      commands:
      - checkout
- name: 0http
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/0http')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: 0http
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/0http/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/0http/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
    - name: uwebsockets
      commands:
      - make  -f javascript/0http/.Makefile build.uwebsockets
      - bundle exec rspec .spec
      - make  -f javascript/0http/.Makefile collect.uwebsockets
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: uwebsockets
- name: express
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/express')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: express
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/express/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/express/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: fastify
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/fastify')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: fastify
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/fastify/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/fastify/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: feathersjs
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/feathersjs')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: feathersjs
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/feathersjs/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/feathersjs/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: foxify
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/foxify')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: foxify
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/foxify/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/foxify/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: fyrejet
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/fyrejet')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: fyrejet
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/fyrejet/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/fyrejet/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
    - name: uwebsockets
      commands:
      - make  -f javascript/fyrejet/.Makefile build.uwebsockets
      - bundle exec rspec .spec
      - make  -f javascript/fyrejet/.Makefile collect.uwebsockets
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: uwebsockets
- name: hapi
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/hapi')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: hapi
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/hapi/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/hapi/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: iotjs-express
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/iotjs-express')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: iotjs-express
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/iotjs-express/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/iotjs-express/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: koa
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/koa')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: koa
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/koa/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/koa/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: moleculer
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/moleculer')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: moleculer
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/moleculer/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/moleculer/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: muneem
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/muneem')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: muneem
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/muneem/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/muneem/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: nanoexpress
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/nanoexpress')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: nanoexpress
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: uwebsockets
      commands:
      - make  -f javascript/nanoexpress/.Makefile build.uwebsockets
      - bundle exec rspec .spec
      - make  -f javascript/nanoexpress/.Makefile collect.uwebsockets
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: uwebsockets
- name: naturaljs-router
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/naturaljs-router')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: naturaljs-router
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: uwebsockets
      commands:
      - make  -f javascript/naturaljs-router/.Makefile build.uwebsockets
      - bundle exec rspec .spec
      - make  -f javascript/naturaljs-router/.Makefile collect.uwebsockets
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: uwebsockets
- name: nestjs-express
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/nestjs-express')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: nestjs-express
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/nestjs-express/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/nestjs-express/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: nestjs-fastify
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/nestjs-fastify')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: nestjs-fastify
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/nestjs-fastify/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/nestjs-fastify/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: polka
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/polka')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: polka
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/polka/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/polka/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: polkadot
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/polkadot')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: polkadot
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/polkadot/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/polkadot/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: rayo
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/rayo')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: rayo
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/rayo/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/rayo/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: restana
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/restana')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: restana
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/restana/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/restana/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: restify
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/restify')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: restify
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/restify/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/restify/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: sails
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/sails')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: sails
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/sails/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/sails/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: sifrr
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/sifrr')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: sifrr
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: uwebsockets
      commands:
      - make  -f javascript/sifrr/.Makefile build.uwebsockets
      - bundle exec rspec .spec
      - make  -f javascript/sifrr/.Makefile collect.uwebsockets
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: uwebsockets
- name: tinyhttp
  dependencies:
  - javascript
  run:
    when: change_in('/javascript/tinyhttp')
  task:
    env_vars:
    - name: LANGUAGE
      value: javascript
    - name: FRAMEWORK
      value: tinyhttp
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: node
      commands:
      - make  -f javascript/tinyhttp/.Makefile build.node
      - bundle exec rspec .spec
      - make  -f javascript/tinyhttp/.Makefile collect.node
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: node
- name: php
  dependencies:
  - setup
  run:
    when: change_in('/php/')
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: setup
      commands:
      - checkout
- name: antidot
  dependencies:
  - php
  run:
    when: change_in('/php/antidot')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: antidot
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/antidot/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/antidot/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: basicphp
  dependencies:
  - php
  run:
    when: change_in('/php/basicphp')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: basicphp
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/basicphp/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/basicphp/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: bearframework
  dependencies:
  - php
  run:
    when: change_in('/php/bearframework')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: bearframework
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/bearframework/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/bearframework/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: chubbyphp
  dependencies:
  - php
  run:
    when: change_in('/php/chubbyphp')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: chubbyphp
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/chubbyphp/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/chubbyphp/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
    - name: swoole
      commands:
      - make  -f php/chubbyphp/.Makefile build.swoole
      - bundle exec rspec .spec
      - make  -f php/chubbyphp/.Makefile collect.swoole
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: swoole
    - name: workerman
      commands:
      - make  -f php/chubbyphp/.Makefile build.workerman
      - bundle exec rspec .spec
      - make  -f php/chubbyphp/.Makefile collect.workerman
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: workerman
    - name: road-runner
      commands:
      - make  -f php/chubbyphp/.Makefile build.road-runner
      - bundle exec rspec .spec
      - make  -f php/chubbyphp/.Makefile collect.road-runner
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: road-runner
- name: codeigniter4
  dependencies:
  - php
  run:
    when: change_in('/php/codeigniter4')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: codeigniter4
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/codeigniter4/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/codeigniter4/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: comet
  dependencies:
  - php
  run:
    when: change_in('/php/comet')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: comet
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/comet/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/comet/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: cubex
  dependencies:
  - php
  run:
    when: change_in('/php/cubex')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: cubex
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: workerman
      commands:
      - make  -f php/cubex/.Makefile build.workerman
      - bundle exec rspec .spec
      - make  -f php/cubex/.Makefile collect.workerman
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: workerman
    - name: php-fpm
      commands:
      - make  -f php/cubex/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/cubex/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: driftphp
  dependencies:
  - php
  run:
    when: change_in('/php/driftphp')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: driftphp
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/driftphp/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/driftphp/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: fastsitephp
  dependencies:
  - php
  run:
    when: change_in('/php/fastsitephp')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: fastsitephp
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/fastsitephp/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/fastsitephp/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: fatfree
  dependencies:
  - php
  run:
    when: change_in('/php/fatfree')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: fatfree
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/fatfree/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/fatfree/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: hamlet
  dependencies:
  - php
  run:
    when: change_in('/php/hamlet')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: hamlet
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/hamlet/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/hamlet/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: hyperf
  dependencies:
  - php
  run:
    when: change_in('/php/hyperf')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: hyperf
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/hyperf/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/hyperf/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: ice
  dependencies:
  - php
  run:
    when: change_in('/php/ice')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: ice
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/ice/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/ice/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: imi
  dependencies:
  - php
  run:
    when: change_in('/php/imi')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: imi
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/imi/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/imi/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: laminas
  dependencies:
  - php
  run:
    when: change_in('/php/laminas')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: laminas
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/laminas/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/laminas/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: laravel
  dependencies:
  - php
  run:
    when: change_in('/php/laravel')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: laravel
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/laravel/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/laravel/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
    - name: swoole
      commands:
      - make  -f php/laravel/.Makefile build.swoole
      - bundle exec rspec .spec
      - make  -f php/laravel/.Makefile collect.swoole
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: swoole
- name: laravel-s-laravel
  dependencies:
  - php
  run:
    when: change_in('/php/laravel-s-laravel')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: laravel-s-laravel
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/laravel-s-laravel/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/laravel-s-laravel/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: laravel-s-lumen
  dependencies:
  - php
  run:
    when: change_in('/php/laravel-s-lumen')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: laravel-s-lumen
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/laravel-s-lumen/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/laravel-s-lumen/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: lumen
  dependencies:
  - php
  run:
    when: change_in('/php/lumen')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: lumen
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/lumen/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/lumen/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: mark
  dependencies:
  - php
  run:
    when: change_in('/php/mark')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: mark
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/mark/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/mark/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: mezzio
  dependencies:
  - php
  run:
    when: change_in('/php/mezzio')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: mezzio
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/mezzio/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/mezzio/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: nano
  dependencies:
  - php
  run:
    when: change_in('/php/nano')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: nano
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: workerman
      commands:
      - make  -f php/nano/.Makefile build.workerman
      - bundle exec rspec .spec
      - make  -f php/nano/.Makefile collect.workerman
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: workerman
- name: nette
  dependencies:
  - php
  run:
    when: change_in('/php/nette')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: nette
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/nette/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/nette/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: one
  dependencies:
  - php
  run:
    when: change_in('/php/one')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: one
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/one/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/one/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: one-fpm
  dependencies:
  - php
  run:
    when: change_in('/php/one-fpm')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: one-fpm
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/one-fpm/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/one-fpm/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: phalcon
  dependencies:
  - php
  run:
    when: change_in('/php/phalcon')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: phalcon
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/phalcon/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/phalcon/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: siler
  dependencies:
  - php
  run:
    when: change_in('/php/siler')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: siler
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/siler/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/siler/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: siler-swoole
  dependencies:
  - php
  run:
    when: change_in('/php/siler-swoole')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: siler-swoole
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/siler-swoole/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/siler-swoole/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: simps
  dependencies:
  - php
  run:
    when: change_in('/php/simps')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: simps
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/simps/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/simps/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: slim
  dependencies:
  - php
  run:
    when: change_in('/php/slim')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: slim
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/slim/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/slim/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
    - name: swoole
      commands:
      - make  -f php/slim/.Makefile build.swoole
      - bundle exec rspec .spec
      - make  -f php/slim/.Makefile collect.swoole
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: swoole
    - name: road-runner
      commands:
      - make  -f php/slim/.Makefile build.road-runner
      - bundle exec rspec .spec
      - make  -f php/slim/.Makefile collect.road-runner
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: road-runner
- name: spiral
  dependencies:
  - php
  run:
    when: change_in('/php/spiral')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: spiral
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/spiral/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/spiral/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: sunrise-router
  dependencies:
  - php
  run:
    when: change_in('/php/sunrise-router')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: sunrise-router
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/sunrise-router/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/sunrise-router/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
    - name: road-runner
      commands:
      - make  -f php/sunrise-router/.Makefile build.road-runner
      - bundle exec rspec .spec
      - make  -f php/sunrise-router/.Makefile collect.road-runner
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: road-runner
- name: sunrise-router-annotations
  dependencies:
  - php
  run:
    when: change_in('/php/sunrise-router-annotations')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: sunrise-router-annotations
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/sunrise-router-annotations/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/sunrise-router-annotations/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: sw-fw-less
  dependencies:
  - php
  run:
    when: change_in('/php/sw-fw-less')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: sw-fw-less
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/sw-fw-less/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/sw-fw-less/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: swoft
  dependencies:
  - php
  run:
    when: change_in('/php/swoft')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: swoft
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: swoole
      commands:
      - make  -f php/swoft/.Makefile build.swoole
      - bundle exec rspec .spec
      - make  -f php/swoft/.Makefile collect.swoole
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: swoole
- name: swoole
  dependencies:
  - php
  run:
    when: change_in('/php/swoole')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: swoole
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: swoole
      commands:
      - make  -f php/swoole/.Makefile build.swoole
      - bundle exec rspec .spec
      - make  -f php/swoole/.Makefile collect.swoole
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: swoole
- name: swoole-coroutine
  dependencies:
  - php
  run:
    when: change_in('/php/swoole-coroutine')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: swoole-coroutine
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: swoole
      commands:
      - make  -f php/swoole-coroutine/.Makefile build.swoole
      - bundle exec rspec .spec
      - make  -f php/swoole-coroutine/.Makefile collect.swoole
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: swoole
- name: symfony
  dependencies:
  - php
  run:
    when: change_in('/php/symfony')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: symfony
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/symfony/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/symfony/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: ubiquity
  dependencies:
  - php
  run:
    when: change_in('/php/ubiquity')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: ubiquity
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/ubiquity/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/ubiquity/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: unic
  dependencies:
  - php
  run:
    when: change_in('/php/unic')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: unic
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/unic/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/unic/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: webman
  dependencies:
  - php
  run:
    when: change_in('/php/webman')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: webman
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/webman/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/webman/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: workerman
  dependencies:
  - php
  run:
    when: change_in('/php/workerman')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: workerman
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/workerman/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/workerman/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: yii
  dependencies:
  - php
  run:
    when: change_in('/php/yii')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: yii
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/yii/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/yii/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: yii-swoole
  dependencies:
  - php
  run:
    when: change_in('/php/yii-swoole')
  task:
    env_vars:
    - name: LANGUAGE
      value: php
    - name: FRAMEWORK
      value: yii-swoole
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: php-fpm
      commands:
      - make  -f php/yii-swoole/.Makefile build.php-fpm
      - bundle exec rspec .spec
      - make  -f php/yii-swoole/.Makefile collect.php-fpm
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: php-fpm
- name: ruby
  dependencies:
  - setup
  run:
    when: change_in('/ruby/')
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: setup
      commands:
      - checkout
- name: agoo
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/agoo')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: agoo
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: agoo
      commands:
      - make  -f ruby/agoo/.Makefile build.agoo
      - bundle exec rspec .spec
      - make  -f ruby/agoo/.Makefile collect.agoo
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: agoo
- name: camping
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/camping')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: camping
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/camping/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/camping/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/camping/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/camping/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/camping/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/camping/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: cuba
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/cuba')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: cuba
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/cuba/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/cuba/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/cuba/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/cuba/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/cuba/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/cuba/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: grape
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/grape')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: grape
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/grape/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/grape/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/grape/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/grape/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/grape/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/grape/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: hanami-api
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/hanami-api')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: hanami-api
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/hanami-api/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/hanami-api/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/hanami-api/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/hanami-api/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/hanami-api/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/hanami-api/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: rack-routing
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/rack-routing')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: rack-routing
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/rack-routing/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/rack-routing/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/rack-routing/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/rack-routing/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/rack-routing/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/rack-routing/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: rack_app
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/rack_app')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: rack_app
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/rack_app/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/rack_app/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/rack_app/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/rack_app/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/rack_app/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/rack_app/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: rails
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/rails')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: rails
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/rails/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/rails/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/rails/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/rails/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/rails/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/rails/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: roda
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/roda')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: roda
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/roda/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/roda/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/roda/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/roda/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/roda/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/roda/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: sinatra
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/sinatra')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: sinatra
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/sinatra/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/sinatra/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/sinatra/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/sinatra/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/sinatra/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/sinatra/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
- name: syro
  dependencies:
  - ruby
  run:
    when: change_in('/ruby/syro')
  task:
    env_vars:
    - name: LANGUAGE
      value: ruby
    - name: FRAMEWORK
      value: syro
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: puma
      commands:
      - make  -f ruby/syro/.Makefile build.puma
      - bundle exec rspec .spec
      - make  -f ruby/syro/.Makefile collect.puma
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: puma
    - name: iodine
      commands:
      - make  -f ruby/syro/.Makefile build.iodine
      - bundle exec rspec .spec
      - make  -f ruby/syro/.Makefile collect.iodine
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: iodine
    - name: falcon
      commands:
      - make  -f ruby/syro/.Makefile build.falcon
      - bundle exec rspec .spec
      - make  -f ruby/syro/.Makefile collect.falcon
      - bundle exec rake db:raw_export
      env_vars:
      - name: ENGINE
        value: falcon
