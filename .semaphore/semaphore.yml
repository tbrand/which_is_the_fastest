---
version: v1.0
name: Benchmarking suite
execution_time_limit:
  hours: 24
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu1804
blocks:
- name: setup
  dependencies: []
  task:
    jobs:
    - name: setup
      commands:
      - checkout
      - cache store $SEMAPHORE_GIT_SHA .
      - sudo apt-get update
      - sudo apt-get install build-essential libssl-dev git -y
      - git clone https://github.com/wg/wrk.git wrk
      - cd wrk && make
      - cache store wrk wrk
      - bundle config path .cache
      - bundle install
      - cache store built-in .cache
      - bundle exec rake config
- name: python
  dependencies:
  - setup
  run:
    when: change_in('/python/')
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: aiohttp
      commands:
      - cd python/aiohttp && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/aiohttp bundle exec rspec .spec
      - make  -f python/aiohttp/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: apidaora
      commands:
      - cd python/apidaora && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/apidaora bundle exec rspec .spec
      - make  -f python/apidaora/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: asgineer
      commands:
      - cd python/asgineer && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/asgineer bundle exec rspec .spec
      - make  -f python/asgineer/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: blacksheep
      commands:
      - cd python/blacksheep && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/blacksheep bundle exec rspec .spec
      - make  -f python/blacksheep/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: bottle
      commands:
      - cd python/bottle && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/bottle bundle exec rspec .spec
      - make  -f python/bottle/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: cherrypy
      commands:
      - cd python/cherrypy && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/cherrypy bundle exec rspec .spec
      - make  -f python/cherrypy/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: clastic
      commands:
      - cd python/clastic && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/clastic bundle exec rspec .spec
      - make  -f python/clastic/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: cyclone
      commands:
      - cd python/cyclone && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/cyclone bundle exec rspec .spec
      - make  -f python/cyclone/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: django
      commands:
      - cd python/django && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/django bundle exec rspec .spec
      - make  -f python/django/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: django-ninja
      commands:
      - cd python/django-ninja && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/django-ninja bundle exec rspec .spec
      - make  -f python/django-ninja/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: emmett
      commands:
      - cd python/emmett && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/emmett bundle exec rspec .spec
      - make  -f python/emmett/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: falcon
      commands:
      - cd python/falcon && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/falcon bundle exec rspec .spec
      - make  -f python/falcon/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: fastapi
      commands:
      - cd python/fastapi && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/fastapi bundle exec rspec .spec
      - make  -f python/fastapi/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: flask
      commands:
      - cd python/flask && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/flask bundle exec rspec .spec
      - make  -f python/flask/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: guillotina
      commands:
      - cd python/guillotina && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/guillotina bundle exec rspec .spec
      - make  -f python/guillotina/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: hug
      commands:
      - cd python/hug && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/hug bundle exec rspec .spec
      - make  -f python/hug/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: index.py
      commands:
      - cd python/index.py && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/index.py bundle exec rspec .spec
      - make  -f python/index.py/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: klein
      commands:
      - cd python/klein && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/klein bundle exec rspec .spec
      - make  -f python/klein/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: masonite
      commands:
      - cd python/masonite && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/masonite bundle exec rspec .spec
      - make  -f python/masonite/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: molten
      commands:
      - cd python/molten && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/molten bundle exec rspec .spec
      - make  -f python/molten/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: nameko
      commands:
      - cd python/nameko && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/nameko bundle exec rspec .spec
      - make  -f python/nameko/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: pyramid
      commands:
      - cd python/pyramid && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/pyramid bundle exec rspec .spec
      - make  -f python/pyramid/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: quart
      commands:
      - cd python/quart && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/quart bundle exec rspec .spec
      - make  -f python/quart/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: responder
      commands:
      - cd python/responder && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/responder bundle exec rspec .spec
      - make  -f python/responder/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: sanic
      commands:
      - cd python/sanic && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/sanic bundle exec rspec .spec
      - make  -f python/sanic/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: starlette
      commands:
      - cd python/starlette && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/starlette bundle exec rspec .spec
      - make  -f python/starlette/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: tonberry
      commands:
      - cd python/tonberry && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/tonberry bundle exec rspec .spec
      - make  -f python/tonberry/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: tornado
      commands:
      - cd python/tornado && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/tornado bundle exec rspec .spec
      - make  -f python/tornado/.Makefile collect
      - bundle exec rake db:export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
