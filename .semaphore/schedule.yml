---
version: v1.0
name: Benchmarking suite
execution_time_limit:
  hours: 24
agent:
  machine:
    type: e1-standard-2
    os_image: ubuntu2004
blocks:
- name: setup
  dependencies: []
  task:
    jobs:
    - name: setup
      commands:
      - checkout
      - cache store $SEMAPHORE_GIT_SHA .
      - sudo apt-get update
      - sudo apt-get install build-essential libssl-dev git -y
      - git clone https://github.com/wg/wrk.git wrk
      - cd wrk && make
      - cache store wrk wrk
      - bundle config path .cache
      - bundle install
      - cache store built-in .cache
      - bundle exec rake config
- name: c
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: agoo-c
      commands:
      - cd c/agoo-c && make build  -f .Makefile  && cd -
      - FRAMEWORK=c/agoo-c bundle exec rspec .spec
      - make  -f c/agoo-c/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: kore
      commands:
      - cd c/kore && make build  -f .Makefile  && cd -
      - FRAMEWORK=c/kore bundle exec rspec .spec
      - make  -f c/kore/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: clojure
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: coast
      commands:
      - cd clojure/coast && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/coast bundle exec rspec .spec
      - make  -f clojure/coast/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: donkey
      commands:
      - cd clojure/donkey && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/donkey bundle exec rspec .spec
      - make  -f clojure/donkey/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: luminus
      commands:
      - cd clojure/luminus && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/luminus bundle exec rspec .spec
      - make  -f clojure/luminus/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: yada
      commands:
      - cd clojure/yada && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/yada bundle exec rspec .spec
      - make  -f clojure/yada/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: cpp
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: drogon
      commands:
      - cd cpp/drogon && make build  -f .Makefile  && cd -
      - FRAMEWORK=cpp/drogon bundle exec rspec .spec
      - make  -f cpp/drogon/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: evhtp
      commands:
      - cd cpp/evhtp && make build  -f .Makefile  && cd -
      - FRAMEWORK=cpp/evhtp bundle exec rspec .spec
      - make  -f cpp/evhtp/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: nawa
      commands:
      - cd cpp/nawa && make build  -f .Makefile  && cd -
      - FRAMEWORK=cpp/nawa bundle exec rspec .spec
      - make  -f cpp/nawa/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: crystal
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: amber
      commands:
      - cd crystal/amber && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/amber bundle exec rspec .spec
      - make  -f crystal/amber/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: athena
      commands:
      - cd crystal/athena && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/athena bundle exec rspec .spec
      - make  -f crystal/athena/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: grip
      commands:
      - cd crystal/grip && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/grip bundle exec rspec .spec
      - make  -f crystal/grip/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: kemal
      commands:
      - cd crystal/kemal && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/kemal bundle exec rspec .spec
      - make  -f crystal/kemal/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: orion
      commands:
      - cd crystal/orion && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/orion bundle exec rspec .spec
      - make  -f crystal/orion/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: router.cr
      commands:
      - cd crystal/router.cr && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/router.cr bundle exec rspec .spec
      - make  -f crystal/router.cr/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: runcobo
      commands:
      - cd crystal/runcobo && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/runcobo bundle exec rspec .spec
      - make  -f crystal/runcobo/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: shivneri
      commands:
      - cd crystal/shivneri && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/shivneri bundle exec rspec .spec
      - make  -f crystal/shivneri/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: spider-gazelle
      commands:
      - cd crystal/spider-gazelle && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/spider-gazelle bundle exec rspec .spec
      - make  -f crystal/spider-gazelle/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: toro
      commands:
      - cd crystal/toro && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/toro bundle exec rspec .spec
      - make  -f crystal/toro/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: csharp
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: aspnetcore
      commands:
      - cd csharp/aspnetcore && make build  -f .Makefile  && cd -
      - FRAMEWORK=csharp/aspnetcore bundle exec rspec .spec
      - make  -f csharp/aspnetcore/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    - name: beetlex
=======
    - name: tango
>>>>>>> upstream/master
      commands:
      - cd go/tango && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/tango bundle exec rspec .spec
      - make  -f go/tango/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
    - name: carter
=======
    - name: tango
>>>>>>> 07784711 (reduce PR size)
      commands:
      - cd go/tango && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/tango bundle exec rspec .spec
      - make  -f go/tango/.Makefile collect
=======
    - name: httprouter
      commands:
      - cd go/httprouter && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/httprouter bundle exec rspec .spec
      - make  -f go/httprouter/.Makefile collect
>>>>>>> upstream/master
=======
    - name: beetlex
      commands:
      - cd csharp/beetlex && make build  -f .Makefile  && cd -
      - FRAMEWORK=csharp/beetlex bundle exec rspec .spec
      - make  -f csharp/beetlex/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: httprouter
=======
    - name: carter
>>>>>>> upstream/master
      commands:
      - cd csharp/carter && make build  -f .Makefile  && cd -
      - FRAMEWORK=csharp/carter bundle exec rspec .spec
      - make  -f csharp/carter/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: simplify.web
      commands:
<<<<<<< HEAD
<<<<<<< HEAD
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: start
      commands:
      - cd dart/start && make build  -f .Makefile  && cd -
      - FRAMEWORK=dart/start bundle exec rspec .spec
      - make  -f dart/start/.Makefile collect
=======
      - cd go/gf && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/gf bundle exec rspec .spec
      - make  -f go/gf/.Makefile collect
>>>>>>> 07784711 (reduce PR size)
=======
    - name: gf
      commands:
      - cd go/gf && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/gf bundle exec rspec .spec
      - make  -f go/gf/.Makefile collect
>>>>>>> upstream/master
=======
      - cd csharp/simplify.web && make build  -f .Makefile  && cd -
      - FRAMEWORK=csharp/simplify.web bundle exec rspec .spec
      - make  -f csharp/simplify.web/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: dart
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: start
      commands:
      - cd dart/start && make build  -f .Makefile  && cd -
      - FRAMEWORK=dart/start bundle exec rspec .spec
      - make  -f dart/start/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: elixir
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: cowboy
      commands:
      - cd elixir/cowboy && make build  -f .Makefile  && cd -
      - FRAMEWORK=elixir/cowboy bundle exec rspec .spec
      - make  -f elixir/cowboy/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: cowboy_stream
      commands:
      - cd elixir/cowboy_stream && make build  -f .Makefile  && cd -
      - FRAMEWORK=elixir/cowboy_stream bundle exec rspec .spec
      - make  -f elixir/cowboy_stream/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: phoenix
      commands:
      - cd elixir/phoenix && make build  -f .Makefile  && cd -
      - FRAMEWORK=elixir/phoenix bundle exec rspec .spec
      - make  -f elixir/phoenix/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: plug
      commands:
      - cd elixir/plug && make build  -f .Makefile  && cd -
      - FRAMEWORK=elixir/plug bundle exec rspec .spec
      - make  -f elixir/plug/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: fsharp
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: falco
      commands:
      - cd fsharp/falco && make build  -f .Makefile  && cd -
      - FRAMEWORK=fsharp/falco bundle exec rspec .spec
      - make  -f fsharp/falco/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: frank
      commands:
      - cd fsharp/frank && make build  -f .Makefile  && cd -
      - FRAMEWORK=fsharp/frank bundle exec rspec .spec
      - make  -f fsharp/frank/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: giraffe
      commands:
      - cd fsharp/giraffe && make build  -f .Makefile  && cd -
      - FRAMEWORK=fsharp/giraffe bundle exec rspec .spec
      - make  -f fsharp/giraffe/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: saturn
      commands:
      - cd fsharp/saturn && make build  -f .Makefile  && cd -
      - FRAMEWORK=fsharp/saturn bundle exec rspec .spec
      - make  -f fsharp/saturn/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: suave
      commands:
      - cd fsharp/suave && make build  -f .Makefile  && cd -
      - FRAMEWORK=fsharp/suave bundle exec rspec .spec
      - make  -f fsharp/suave/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: websharper
      commands:
      - cd fsharp/websharper && make build  -f .Makefile  && cd -
      - FRAMEWORK=fsharp/websharper bundle exec rspec .spec
      - make  -f fsharp/websharper/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: go
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: aero
      commands:
      - cd go/aero && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/aero bundle exec rspec .spec
      - make  -f go/aero/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: aqueduct
      commands:
      - cd dart/aqueduct && make build  -f .Makefile  && cd -
      - FRAMEWORK=dart/aqueduct bundle exec rspec .spec
      - make  -f dart/aqueduct/.Makefile collect
=======
- name: haskell
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: servant
      commands:
      - cd haskell/servant && make build  -f .Makefile  && cd -
      - FRAMEWORK=haskell/servant bundle exec rspec .spec
      - make  -f haskell/servant/.Makefile collect
>>>>>>> upstream/master
=======
    - name: air
      commands:
      - cd go/air && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/air bundle exec rspec .spec
      - make  -f go/air/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: haskell
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: servant
      commands:
      - cd haskell/servant && make build  -f .Makefile  && cd -
      - FRAMEWORK=haskell/servant bundle exec rspec .spec
      - make  -f haskell/servant/.Makefile collect
=======
    - name: scotty
      commands:
      - cd haskell/scotty && make build  -f .Makefile  && cd -
      - FRAMEWORK=haskell/scotty bundle exec rspec .spec
      - make  -f haskell/scotty/.Makefile collect
>>>>>>> upstream/master
=======
    - name: atreugo
      commands:
      - cd go/atreugo && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/atreugo bundle exec rspec .spec
      - make  -f go/atreugo/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: scotty
      commands:
      - cd haskell/scotty && make build  -f .Makefile  && cd -
      - FRAMEWORK=haskell/scotty bundle exec rspec .spec
      - make  -f haskell/scotty/.Makefile collect
=======
- name: pony
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: jennet
      commands:
      - cd pony/jennet && make build  -f .Makefile  && cd -
      - FRAMEWORK=pony/jennet bundle exec rspec .spec
      - make  -f pony/jennet/.Makefile collect
>>>>>>> upstream/master
=======
    - name: beego
      commands:
      - cd go/beego && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/beego bundle exec rspec .spec
      - make  -f go/beego/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: pony
=======
- name: clojure
>>>>>>> upstream/master
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
<<<<<<< HEAD
    - name: jennet
      commands:
      - cd pony/jennet && make build  -f .Makefile  && cd -
      - FRAMEWORK=pony/jennet bundle exec rspec .spec
      - make  -f pony/jennet/.Makefile collect
=======
    - name: yada
      commands:
      - cd clojure/yada && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/yada bundle exec rspec .spec
      - make  -f clojure/yada/.Makefile collect
>>>>>>> upstream/master
=======
    - name: chi
      commands:
      - cd go/chi && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/chi bundle exec rspec .spec
      - make  -f go/chi/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: clojure
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: yada
      commands:
      - cd clojure/yada && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/yada bundle exec rspec .spec
      - make  -f clojure/yada/.Makefile collect
=======
    - name: donkey
      commands:
      - cd clojure/donkey && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/donkey bundle exec rspec .spec
      - make  -f clojure/donkey/.Makefile collect
>>>>>>> upstream/master
=======
    - name: clevergo
      commands:
      - cd go/clevergo && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/clevergo bundle exec rspec .spec
      - make  -f go/clevergo/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: donkey
      commands:
      - cd clojure/donkey && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/donkey bundle exec rspec .spec
      - make  -f clojure/donkey/.Makefile collect
=======
    - name: coast
      commands:
      - cd clojure/coast && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/coast bundle exec rspec .spec
      - make  -f clojure/coast/.Makefile collect
>>>>>>> upstream/master
=======
    - name: echo
      commands:
      - cd go/echo && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/echo bundle exec rspec .spec
      - make  -f go/echo/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: coast
      commands:
      - cd clojure/coast && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/coast bundle exec rspec .spec
      - make  -f clojure/coast/.Makefile collect
=======
    - name: luminus
      commands:
      - cd clojure/luminus && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/luminus bundle exec rspec .spec
      - make  -f clojure/luminus/.Makefile collect
>>>>>>> upstream/master
=======
    - name: fasthttp
      commands:
      - cd go/fasthttp && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/fasthttp bundle exec rspec .spec
      - make  -f go/fasthttp/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: luminus
      commands:
      - cd clojure/luminus && make build  -f .Makefile  && cd -
      - FRAMEWORK=clojure/luminus bundle exec rspec .spec
      - make  -f clojure/luminus/.Makefile collect
=======
- name: python
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: bottle
      commands:
      - cd python/bottle && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/bottle bundle exec rspec .spec
      - make  -f python/bottle/.Makefile collect
>>>>>>> upstream/master
=======
    - name: fiber
      commands:
      - cd go/fiber && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/fiber bundle exec rspec .spec
      - make  -f go/fiber/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: python
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: bottle
      commands:
      - cd python/bottle && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/bottle bundle exec rspec .spec
      - make  -f python/bottle/.Makefile collect
=======
    - name: aiohttp
      commands:
      - cd python/aiohttp && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/aiohttp bundle exec rspec .spec
      - make  -f python/aiohttp/.Makefile collect
>>>>>>> upstream/master
=======
    - name: gearbox
      commands:
      - cd go/gearbox && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/gearbox bundle exec rspec .spec
      - make  -f go/gearbox/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: aiohttp
      commands:
      - cd python/aiohttp && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/aiohttp bundle exec rspec .spec
      - make  -f python/aiohttp/.Makefile collect
=======
    - name: responder
      commands:
      - cd python/responder && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/responder bundle exec rspec .spec
      - make  -f python/responder/.Makefile collect
>>>>>>> upstream/master
=======
    - name: gf
      commands:
      - cd go/gf && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/gf bundle exec rspec .spec
      - make  -f go/gf/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: responder
      commands:
      - cd python/responder && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/responder bundle exec rspec .spec
      - make  -f python/responder/.Makefile collect
=======
    - name: asgineer
      commands:
      - cd python/asgineer && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/asgineer bundle exec rspec .spec
      - make  -f python/asgineer/.Makefile collect
>>>>>>> upstream/master
=======
    - name: gin
      commands:
      - cd go/gin && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/gin bundle exec rspec .spec
      - make  -f go/gin/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: asgineer
      commands:
      - cd python/asgineer && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/asgineer bundle exec rspec .spec
      - make  -f python/asgineer/.Makefile collect
=======
    - name: klein
      commands:
      - cd python/klein && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/klein bundle exec rspec .spec
      - make  -f python/klein/.Makefile collect
>>>>>>> upstream/master
=======
    - name: gorilla-mux
      commands:
      - cd go/gorilla-mux && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/gorilla-mux bundle exec rspec .spec
      - make  -f go/gorilla-mux/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: klein
      commands:
      - cd python/klein && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/klein bundle exec rspec .spec
      - make  -f python/klein/.Makefile collect
=======
    - name: django
      commands:
      - cd python/django && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/django bundle exec rspec .spec
      - make  -f python/django/.Makefile collect
>>>>>>> upstream/master
=======
    - name: goroute
      commands:
      - cd go/goroute && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/goroute bundle exec rspec .spec
      - make  -f go/goroute/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: django
      commands:
      - cd python/django && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/django bundle exec rspec .spec
      - make  -f python/django/.Makefile collect
=======
    - name: flask
      commands:
      - cd python/flask && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/flask bundle exec rspec .spec
      - make  -f python/flask/.Makefile collect
>>>>>>> upstream/master
=======
    - name: gorouter
      commands:
      - cd go/gorouter && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/gorouter bundle exec rspec .spec
      - make  -f go/gorouter/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: flask
      commands:
      - cd python/flask && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/flask bundle exec rspec .spec
      - make  -f python/flask/.Makefile collect
=======
    - name: cherrypy
      commands:
      - cd python/cherrypy && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/cherrypy bundle exec rspec .spec
      - make  -f python/cherrypy/.Makefile collect
>>>>>>> upstream/master
=======
    - name: gorouter-fasthttp
      commands:
      - cd go/gorouter-fasthttp && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/gorouter-fasthttp bundle exec rspec .spec
      - make  -f go/gorouter-fasthttp/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: cherrypy
      commands:
      - cd python/cherrypy && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/cherrypy bundle exec rspec .spec
      - make  -f python/cherrypy/.Makefile collect
=======
    - name: apidaora
      commands:
      - cd python/apidaora && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/apidaora bundle exec rspec .spec
      - make  -f python/apidaora/.Makefile collect
>>>>>>> upstream/master
=======
    - name: goyave
      commands:
      - cd go/goyave && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/goyave bundle exec rspec .spec
      - make  -f go/goyave/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: apidaora
      commands:
      - cd python/apidaora && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/apidaora bundle exec rspec .spec
      - make  -f python/apidaora/.Makefile collect
=======
    - name: blacksheep
      commands:
      - cd python/blacksheep && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/blacksheep bundle exec rspec .spec
      - make  -f python/blacksheep/.Makefile collect
>>>>>>> upstream/master
=======
    - name: gramework
      commands:
      - cd go/gramework && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/gramework bundle exec rspec .spec
      - make  -f go/gramework/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: blacksheep
      commands:
      - cd python/blacksheep && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/blacksheep bundle exec rspec .spec
      - make  -f python/blacksheep/.Makefile collect
=======
    - name: hug
      commands:
      - cd python/hug && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/hug bundle exec rspec .spec
      - make  -f python/hug/.Makefile collect
>>>>>>> upstream/master
=======
    - name: httprouter
      commands:
      - cd go/httprouter && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/httprouter bundle exec rspec .spec
      - make  -f go/httprouter/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: hug
      commands:
      - cd python/hug && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/hug bundle exec rspec .spec
      - make  -f python/hug/.Makefile collect
=======
    - name: baize-wsgi
      commands:
      - cd python/baize-wsgi && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/baize-wsgi bundle exec rspec .spec
      - make  -f python/baize-wsgi/.Makefile collect
>>>>>>> upstream/master
=======
    - name: kami
      commands:
      - cd go/kami && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/kami bundle exec rspec .spec
      - make  -f go/kami/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: baize-wsgi
      commands:
      - cd python/baize-wsgi && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/baize-wsgi bundle exec rspec .spec
      - make  -f python/baize-wsgi/.Makefile collect
=======
    - name: index.py
      commands:
      - cd python/index.py && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/index.py bundle exec rspec .spec
      - make  -f python/index.py/.Makefile collect
>>>>>>> upstream/master
=======
    - name: macaron
      commands:
      - cd go/macaron && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/macaron bundle exec rspec .spec
      - make  -f go/macaron/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: index.py
      commands:
      - cd python/index.py && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/index.py bundle exec rspec .spec
      - make  -f python/index.py/.Makefile collect
=======
    - name: quart
      commands:
      - cd python/quart && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/quart bundle exec rspec .spec
      - make  -f python/quart/.Makefile collect
>>>>>>> upstream/master
=======
    - name: mars
      commands:
      - cd go/mars && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/mars bundle exec rspec .spec
      - make  -f go/mars/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: quart
      commands:
      - cd python/quart && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/quart bundle exec rspec .spec
      - make  -f python/quart/.Makefile collect
=======
    - name: falcon
      commands:
      - cd python/falcon && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/falcon bundle exec rspec .spec
      - make  -f python/falcon/.Makefile collect
>>>>>>> upstream/master
=======
    - name: router
      commands:
      - cd go/router && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/router bundle exec rspec .spec
      - make  -f go/router/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: falcon
      commands:
      - cd python/falcon && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/falcon bundle exec rspec .spec
      - make  -f python/falcon/.Makefile collect
=======
    - name: clastic
      commands:
      - cd python/clastic && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/clastic bundle exec rspec .spec
      - make  -f python/clastic/.Makefile collect
>>>>>>> upstream/master
=======
    - name: rte
      commands:
      - cd go/rte && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/rte bundle exec rspec .spec
      - make  -f go/rte/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: clastic
      commands:
      - cd python/clastic && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/clastic bundle exec rspec .spec
      - make  -f python/clastic/.Makefile collect
=======
    - name: cyclone
      commands:
      - cd python/cyclone && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/cyclone bundle exec rspec .spec
      - make  -f python/cyclone/.Makefile collect
>>>>>>> upstream/master
=======
    - name: tango
      commands:
      - cd go/tango && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/tango bundle exec rspec .spec
      - make  -f go/tango/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: cyclone
      commands:
      - cd python/cyclone && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/cyclone bundle exec rspec .spec
      - make  -f python/cyclone/.Makefile collect
=======
    - name: tonberry
      commands:
      - cd python/tonberry && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/tonberry bundle exec rspec .spec
      - make  -f python/tonberry/.Makefile collect
>>>>>>> upstream/master
=======
    - name: violetear
      commands:
      - cd go/violetear && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/violetear bundle exec rspec .spec
      - make  -f go/violetear/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: tonberry
      commands:
      - cd python/tonberry && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/tonberry bundle exec rspec .spec
      - make  -f python/tonberry/.Makefile collect
=======
    - name: starlette
      commands:
      - cd python/starlette && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/starlette bundle exec rspec .spec
      - make  -f python/starlette/.Makefile collect
>>>>>>> upstream/master
=======
    - name: webgo
      commands:
      - cd go/webgo && make build  -f .Makefile  && cd -
      - FRAMEWORK=go/webgo bundle exec rspec .spec
      - make  -f go/webgo/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: starlette
      commands:
      - cd python/starlette && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/starlette bundle exec rspec .spec
      - make  -f python/starlette/.Makefile collect
=======
    - name: baize-asgi
      commands:
      - cd python/baize-asgi && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/baize-asgi bundle exec rspec .spec
      - make  -f python/baize-asgi/.Makefile collect
>>>>>>> upstream/master
=======
- name: haskell
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: scotty
      commands:
      - cd haskell/scotty && make build  -f .Makefile  && cd -
      - FRAMEWORK=haskell/scotty bundle exec rspec .spec
      - make  -f haskell/scotty/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: baize-asgi
      commands:
      - cd python/baize-asgi && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/baize-asgi bundle exec rspec .spec
      - make  -f python/baize-asgi/.Makefile collect
=======
    - name: nameko
      commands:
      - cd python/nameko && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/nameko bundle exec rspec .spec
      - make  -f python/nameko/.Makefile collect
>>>>>>> upstream/master
=======
    - name: servant
      commands:
      - cd haskell/servant && make build  -f .Makefile  && cd -
      - FRAMEWORK=haskell/servant bundle exec rspec .spec
      - make  -f haskell/servant/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: nameko
      commands:
      - cd python/nameko && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/nameko bundle exec rspec .spec
      - make  -f python/nameko/.Makefile collect
=======
    - name: molten
      commands:
      - cd python/molten && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/molten bundle exec rspec .spec
      - make  -f python/molten/.Makefile collect
>>>>>>> upstream/master
=======
- name: java
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: act
      commands:
      - cd java/act && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/act bundle exec rspec .spec
      - make  -f java/act/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: molten
      commands:
      - cd python/molten && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/molten bundle exec rspec .spec
      - make  -f python/molten/.Makefile collect
=======
    - name: tornado
      commands:
      - cd python/tornado && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/tornado bundle exec rspec .spec
      - make  -f python/tornado/.Makefile collect
>>>>>>> upstream/master
=======
    - name: activej
      commands:
      - cd java/activej && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/activej bundle exec rspec .spec
      - make  -f java/activej/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: tornado
      commands:
      - cd python/tornado && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/tornado bundle exec rspec .spec
      - make  -f python/tornado/.Makefile collect
=======
    - name: fastapi
      commands:
      - cd python/fastapi && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/fastapi bundle exec rspec .spec
      - make  -f python/fastapi/.Makefile collect
>>>>>>> upstream/master
=======
    - name: blade
      commands:
      - cd java/blade && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/blade bundle exec rspec .spec
      - make  -f java/blade/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: fastapi
      commands:
      - cd python/fastapi && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/fastapi bundle exec rspec .spec
      - make  -f python/fastapi/.Makefile collect
=======
    - name: django-ninja
      commands:
      - cd python/django-ninja && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/django-ninja bundle exec rspec .spec
      - make  -f python/django-ninja/.Makefile collect
>>>>>>> upstream/master
=======
    - name: javalin
      commands:
      - cd java/javalin && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/javalin bundle exec rspec .spec
      - make  -f java/javalin/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: django-ninja
      commands:
      - cd python/django-ninja && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/django-ninja bundle exec rspec .spec
      - make  -f python/django-ninja/.Makefile collect
=======
    - name: masonite
      commands:
      - cd python/masonite && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/masonite bundle exec rspec .spec
      - make  -f python/masonite/.Makefile collect
>>>>>>> upstream/master
=======
    - name: jersey-grizzly2
      commands:
      - cd java/jersey-grizzly2 && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/jersey-grizzly2 bundle exec rspec .spec
      - make  -f java/jersey-grizzly2/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: masonite
      commands:
      - cd python/masonite && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/masonite bundle exec rspec .spec
      - make  -f python/masonite/.Makefile collect
=======
    - name: emmett
      commands:
      - cd python/emmett && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/emmett bundle exec rspec .spec
      - make  -f python/emmett/.Makefile collect
>>>>>>> upstream/master
=======
    - name: jersey3-grizzly2
      commands:
      - cd java/jersey3-grizzly2 && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/jersey3-grizzly2 bundle exec rspec .spec
      - make  -f java/jersey3-grizzly2/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: emmett
      commands:
      - cd python/emmett && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/emmett bundle exec rspec .spec
      - make  -f python/emmett/.Makefile collect
=======
    - name: pyramid
      commands:
      - cd python/pyramid && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/pyramid bundle exec rspec .spec
      - make  -f python/pyramid/.Makefile collect
>>>>>>> upstream/master
=======
    - name: jooby
      commands:
      - cd java/jooby && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/jooby bundle exec rspec .spec
      - make  -f java/jooby/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: pyramid
      commands:
      - cd python/pyramid && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/pyramid bundle exec rspec .spec
      - make  -f python/pyramid/.Makefile collect
=======
    - name: sanic
      commands:
      - cd python/sanic && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/sanic bundle exec rspec .spec
      - make  -f python/sanic/.Makefile collect
>>>>>>> upstream/master
=======
    - name: light-4j
      commands:
      - cd java/light-4j && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/light-4j bundle exec rspec .spec
      - make  -f java/light-4j/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: sanic
      commands:
      - cd python/sanic && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/sanic bundle exec rspec .spec
      - make  -f python/sanic/.Makefile collect
=======
    - name: guillotina
      commands:
      - cd python/guillotina && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/guillotina bundle exec rspec .spec
      - make  -f python/guillotina/.Makefile collect
>>>>>>> upstream/master
=======
    - name: micronaut
      commands:
      - cd java/micronaut && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/micronaut bundle exec rspec .spec
      - make  -f java/micronaut/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: guillotina
      commands:
      - cd python/guillotina && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/guillotina bundle exec rspec .spec
      - make  -f python/guillotina/.Makefile collect
=======
- name: rust
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: actix
      commands:
      - cd rust/actix && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/actix bundle exec rspec .spec
      - make  -f rust/actix/.Makefile collect
>>>>>>> upstream/master
=======
    - name: quarkus
      commands:
      - cd java/quarkus && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/quarkus bundle exec rspec .spec
      - make  -f java/quarkus/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: rust
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: actix
      commands:
      - cd rust/actix && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/actix bundle exec rspec .spec
      - make  -f rust/actix/.Makefile collect
=======
    - name: salvo
      commands:
      - cd rust/salvo && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/salvo bundle exec rspec .spec
      - make  -f rust/salvo/.Makefile collect
>>>>>>> upstream/master
=======
    - name: rapidoid
      commands:
      - cd java/rapidoid && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/rapidoid bundle exec rspec .spec
      - make  -f java/rapidoid/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: salvo
      commands:
      - cd rust/salvo && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/salvo bundle exec rspec .spec
      - make  -f rust/salvo/.Makefile collect
=======
    - name: iron
      commands:
      - cd rust/iron && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/iron bundle exec rspec .spec
      - make  -f rust/iron/.Makefile collect
>>>>>>> upstream/master
=======
    - name: restheart
      commands:
      - cd java/restheart && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/restheart bundle exec rspec .spec
      - make  -f java/restheart/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: iron
      commands:
      - cd rust/iron && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/iron bundle exec rspec .spec
      - make  -f rust/iron/.Makefile collect
=======
    - name: gotham
      commands:
      - cd rust/gotham && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/gotham bundle exec rspec .spec
      - make  -f rust/gotham/.Makefile collect
>>>>>>> upstream/master
=======
    - name: spark
      commands:
      - cd java/spark && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/spark bundle exec rspec .spec
      - make  -f java/spark/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: gotham
      commands:
      - cd rust/gotham && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/gotham bundle exec rspec .spec
      - make  -f rust/gotham/.Makefile collect
=======
    - name: nickel
      commands:
      - cd rust/nickel && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/nickel bundle exec rspec .spec
      - make  -f rust/nickel/.Makefile collect
>>>>>>> upstream/master
=======
    - name: spring
      commands:
      - cd java/spring && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/spring bundle exec rspec .spec
      - make  -f java/spring/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: nickel
      commands:
      - cd rust/nickel && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/nickel bundle exec rspec .spec
      - make  -f rust/nickel/.Makefile collect
=======
- name: csharp
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: beetlex
      commands:
      - cd csharp/beetlex && make build  -f .Makefile  && cd -
      - FRAMEWORK=csharp/beetlex bundle exec rspec .spec
      - make  -f csharp/beetlex/.Makefile collect
>>>>>>> upstream/master
=======
    - name: struts2
      commands:
      - cd java/struts2 && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/struts2 bundle exec rspec .spec
      - make  -f java/struts2/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: csharp
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: simplify.web
      commands:
=======
    - name: simplify.web
      commands:
>>>>>>> upstream/master
      - cd csharp/simplify.web && make build  -f .Makefile  && cd -
      - FRAMEWORK=csharp/simplify.web bundle exec rspec .spec
      - make  -f csharp/simplify.web/.Makefile collect
=======
    - name: undertow
      commands:
      - cd java/undertow && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/undertow bundle exec rspec .spec
      - make  -f java/undertow/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: vertx
      commands:
      - cd java/vertx && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/vertx bundle exec rspec .spec
      - make  -f java/vertx/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: vertx4web
      commands:
      - cd java/vertx4web && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/vertx4web bundle exec rspec .spec
      - make  -f java/vertx4web/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: javascript
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: 0http
      commands:
      - cd javascript/0http && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/0http bundle exec rspec .spec
      - make  -f javascript/0http/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: express
      commands:
      - cd javascript/express && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/express bundle exec rspec .spec
      - make  -f javascript/express/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: fastify
      commands:
      - cd javascript/fastify && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/fastify bundle exec rspec .spec
      - make  -f javascript/fastify/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: feathersjs
      commands:
      - cd javascript/feathersjs && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/feathersjs bundle exec rspec .spec
      - make  -f javascript/feathersjs/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: foxify
      commands:
      - cd javascript/foxify && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/foxify bundle exec rspec .spec
      - make  -f javascript/foxify/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: fyrejet
      commands:
      - cd javascript/fyrejet && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/fyrejet bundle exec rspec .spec
      - make  -f javascript/fyrejet/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: fyrejet-uwebsockets
      commands:
      - cd javascript/fyrejet-uwebsockets && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/fyrejet-uwebsockets bundle exec rspec .spec
      - make  -f javascript/fyrejet-uwebsockets/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: hapi
      commands:
      - cd javascript/hapi && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/hapi bundle exec rspec .spec
      - make  -f javascript/hapi/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: iotjs-express
      commands:
      - cd javascript/iotjs-express && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/iotjs-express bundle exec rspec .spec
      - make  -f javascript/iotjs-express/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: koa
      commands:
      - cd javascript/koa && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/koa bundle exec rspec .spec
      - make  -f javascript/koa/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: low-http-server
      commands:
      - cd javascript/low-http-server && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/low-http-server bundle exec rspec .spec
      - make  -f javascript/low-http-server/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: moleculer
      commands:
<<<<<<< HEAD
      - cd java/restheart && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/restheart bundle exec rspec .spec
      - make  -f java/restheart/.Makefile collect
<<<<<<< HEAD
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: spring
      commands:
      - cd java/spring && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/spring bundle exec rspec .spec
      - make  -f java/spring/.Makefile collect
=======
>>>>>>> upstream/master
=======
      - cd javascript/moleculer && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/moleculer bundle exec rspec .spec
      - make  -f javascript/moleculer/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: quarkus
      commands:
      - cd java/quarkus && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/quarkus bundle exec rspec .spec
      - make  -f java/quarkus/.Makefile collect
=======
    - name: spring
      commands:
      - cd java/spring && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/spring bundle exec rspec .spec
      - make  -f java/spring/.Makefile collect
>>>>>>> upstream/master
=======
    - name: muneem
      commands:
      - cd javascript/muneem && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/muneem bundle exec rspec .spec
      - make  -f javascript/muneem/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: spark
      commands:
      - cd java/spark && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/spark bundle exec rspec .spec
      - make  -f java/spark/.Makefile collect
=======
    - name: quarkus
      commands:
      - cd java/quarkus && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/quarkus bundle exec rspec .spec
      - make  -f java/quarkus/.Makefile collect
>>>>>>> upstream/master
=======
    - name: nanoexpress
      commands:
      - cd javascript/nanoexpress && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/nanoexpress bundle exec rspec .spec
      - make  -f javascript/nanoexpress/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: vertx
      commands:
      - cd java/vertx && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/vertx bundle exec rspec .spec
      - make  -f java/vertx/.Makefile collect
=======
    - name: spark
      commands:
      - cd java/spark && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/spark bundle exec rspec .spec
      - make  -f java/spark/.Makefile collect
>>>>>>> upstream/master
=======
    - name: naturaljs-router
      commands:
      - cd javascript/naturaljs-router && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/naturaljs-router bundle exec rspec .spec
      - make  -f javascript/naturaljs-router/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: struts2
      commands:
      - cd java/struts2 && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/struts2 bundle exec rspec .spec
      - make  -f java/struts2/.Makefile collect
=======
    - name: vertx
      commands:
      - cd java/vertx && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/vertx bundle exec rspec .spec
      - make  -f java/vertx/.Makefile collect
>>>>>>> upstream/master
=======
    - name: nestjs-express
      commands:
      - cd javascript/nestjs-express && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/nestjs-express bundle exec rspec .spec
      - make  -f javascript/nestjs-express/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    - name: polka
=======
    - name: micronaut
      commands:
=======
    - name: struts2
=======
    - name: nestjs-fastify
>>>>>>> upstream/master
      commands:
      - cd javascript/nestjs-fastify && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/nestjs-fastify bundle exec rspec .spec
      - make  -f javascript/nestjs-fastify/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: polka
      commands:
<<<<<<< HEAD
>>>>>>> upstream/master
      - cd java/micronaut && make build  -f .Makefile  && cd -
      - FRAMEWORK=java/micronaut bundle exec rspec .spec
      - make  -f java/micronaut/.Makefile collect
=======
      - cd javascript/polka && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/polka bundle exec rspec .spec
      - make  -f javascript/polka/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
- name: fsharp
  dependencies:
  - setup
  task:
    prologue:
<<<<<<< HEAD
>>>>>>> 07784711 (reduce PR size)
=======
>>>>>>> upstream/master
=======
    - name: polkadot
>>>>>>> upstream/master
      commands:
      - cd javascript/polkadot && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/polkadot bundle exec rspec .spec
      - make  -f javascript/polkadot/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: rayo
      commands:
      - cd javascript/rayo && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/rayo bundle exec rspec .spec
      - make  -f javascript/rayo/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: restana
      commands:
      - cd javascript/restana && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/restana bundle exec rspec .spec
      - make  -f javascript/restana/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: restify
      commands:
      - cd javascript/restify && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/restify bundle exec rspec .spec
      - make  -f javascript/restify/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: sails
      commands:
      - cd javascript/sails && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/sails bundle exec rspec .spec
      - make  -f javascript/sails/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: sifrr
      commands:
      - cd javascript/sifrr && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/sifrr bundle exec rspec .spec
      - make  -f javascript/sifrr/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: tinyhttp
      commands:
      - cd javascript/tinyhttp && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/tinyhttp bundle exec rspec .spec
      - make  -f javascript/tinyhttp/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: turbo_polka
      commands:
      - cd javascript/turbo_polka && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/turbo_polka bundle exec rspec .spec
      - make  -f javascript/turbo_polka/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: julia
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: merly
      commands:
      - cd julia/merly && make build  -f .Makefile  && cd -
      - FRAMEWORK=julia/merly bundle exec rspec .spec
      - make  -f julia/merly/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: kotlin
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: http4k
      commands:
      - cd kotlin/http4k && make build  -f .Makefile  && cd -
      - FRAMEWORK=kotlin/http4k bundle exec rspec .spec
      - make  -f kotlin/http4k/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: kooby
      commands:
      - cd kotlin/kooby && make build  -f .Makefile  && cd -
      - FRAMEWORK=kotlin/kooby bundle exec rspec .spec
      - make  -f kotlin/kooby/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: ktor
      commands:
      - cd kotlin/ktor && make build  -f .Makefile  && cd -
      - FRAMEWORK=kotlin/ktor bundle exec rspec .spec
      - make  -f kotlin/ktor/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: nim
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: akane
      commands:
      - cd nim/akane && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/akane bundle exec rspec .spec
      - make  -f nim/akane/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: httpbeast
      commands:
      - cd nim/httpbeast && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/httpbeast bundle exec rspec .spec
      - make  -f nim/httpbeast/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: jester
      commands:
      - cd nim/jester && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/jester bundle exec rspec .spec
      - make  -f nim/jester/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: mike
      commands:
      - cd nim/mike && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/mike bundle exec rspec .spec
      - make  -f nim/mike/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: rosencrantz
      commands:
      - cd nim/rosencrantz && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/rosencrantz bundle exec rspec .spec
      - make  -f nim/rosencrantz/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: scorper
      commands:
      - cd nim/scorper && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/scorper bundle exec rspec .spec
      - make  -f nim/scorper/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: whip
      commands:
      - cd nim/whip && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/whip bundle exec rspec .spec
      - make  -f nim/whip/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: perl
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: dancer2
      commands:
      - cd perl/dancer2 && make build  -f .Makefile  && cd -
      - FRAMEWORK=perl/dancer2 bundle exec rspec .spec
      - make  -f perl/dancer2/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: php
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: antidot
      commands:
      - cd php/antidot && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/antidot bundle exec rspec .spec
      - make  -f php/antidot/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: basicphp
      commands:
      - cd php/basicphp && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/basicphp bundle exec rspec .spec
      - make  -f php/basicphp/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: bearframework
      commands:
      - cd php/bearframework && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/bearframework bundle exec rspec .spec
      - make  -f php/bearframework/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: chubbyphp
      commands:
      - cd php/chubbyphp && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/chubbyphp bundle exec rspec .spec
      - make  -f php/chubbyphp/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: chubbyphp-roadrunner
      commands:
      - cd php/chubbyphp-roadrunner && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/chubbyphp-roadrunner bundle exec rspec .spec
      - make  -f php/chubbyphp-roadrunner/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: chubbyphp-swoole
      commands:
      - cd php/chubbyphp-swoole && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/chubbyphp-swoole bundle exec rspec .spec
      - make  -f php/chubbyphp-swoole/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: chubbyphp-workerman
      commands:
      - cd php/chubbyphp-workerman && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/chubbyphp-workerman bundle exec rspec .spec
      - make  -f php/chubbyphp-workerman/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: codeigniter4
      commands:
      - cd php/codeigniter4 && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/codeigniter4 bundle exec rspec .spec
      - make  -f php/codeigniter4/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: comet
      commands:
      - cd php/comet && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/comet bundle exec rspec .spec
      - make  -f php/comet/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: cubex
      commands:
      - cd php/cubex && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/cubex bundle exec rspec .spec
      - make  -f php/cubex/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: driftphp
      commands:
      - cd php/driftphp && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/driftphp bundle exec rspec .spec
      - make  -f php/driftphp/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: fastsitephp
      commands:
      - cd php/fastsitephp && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/fastsitephp bundle exec rspec .spec
      - make  -f php/fastsitephp/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: fatfree
      commands:
      - cd php/fatfree && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/fatfree bundle exec rspec .spec
      - make  -f php/fatfree/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: hamlet
      commands:
      - cd php/hamlet && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/hamlet bundle exec rspec .spec
      - make  -f php/hamlet/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: hyperf
      commands:
      - cd php/hyperf && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/hyperf bundle exec rspec .spec
      - make  -f php/hyperf/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: ice
      commands:
      - cd php/ice && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/ice bundle exec rspec .spec
      - make  -f php/ice/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: imi
      commands:
      - cd php/imi && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/imi bundle exec rspec .spec
      - make  -f php/imi/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: laminas
      commands:
      - cd php/laminas && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/laminas bundle exec rspec .spec
      - make  -f php/laminas/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: laravel
      commands:
      - cd php/laravel && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/laravel bundle exec rspec .spec
      - make  -f php/laravel/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: laravel-s-laravel
      commands:
      - cd php/laravel-s-laravel && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/laravel-s-laravel bundle exec rspec .spec
      - make  -f php/laravel-s-laravel/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: laravel-s-lumen
      commands:
      - cd php/laravel-s-lumen && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/laravel-s-lumen bundle exec rspec .spec
      - make  -f php/laravel-s-lumen/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: lumen
      commands:
      - cd php/lumen && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/lumen bundle exec rspec .spec
      - make  -f php/lumen/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: mark
      commands:
      - cd php/mark && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/mark bundle exec rspec .spec
      - make  -f php/mark/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: mezzio
      commands:
      - cd php/mezzio && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/mezzio bundle exec rspec .spec
      - make  -f php/mezzio/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: nano
      commands:
      - cd php/nano && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/nano bundle exec rspec .spec
      - make  -f php/nano/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: nette
      commands:
      - cd php/nette && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/nette bundle exec rspec .spec
      - make  -f php/nette/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: one
      commands:
      - cd php/one && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/one bundle exec rspec .spec
      - make  -f php/one/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: one-fpm
      commands:
      - cd php/one-fpm && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/one-fpm bundle exec rspec .spec
      - make  -f php/one-fpm/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: phalcon
      commands:
      - cd php/phalcon && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/phalcon bundle exec rspec .spec
      - make  -f php/phalcon/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: siler
      commands:
      - cd php/siler && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/siler bundle exec rspec .spec
      - make  -f php/siler/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: siler-swoole
      commands:
      - cd php/siler-swoole && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/siler-swoole bundle exec rspec .spec
      - make  -f php/siler-swoole/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: simps
      commands:
      - cd php/simps && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/simps bundle exec rspec .spec
      - make  -f php/simps/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: slim
      commands:
      - cd php/slim && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/slim bundle exec rspec .spec
      - make  -f php/slim/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: slim-roadrunner
      commands:
      - cd php/slim-roadrunner && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/slim-roadrunner bundle exec rspec .spec
      - make  -f php/slim-roadrunner/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: slim-swoole
      commands:
      - cd php/slim-swoole && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/slim-swoole bundle exec rspec .spec
      - make  -f php/slim-swoole/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: spiral
      commands:
      - cd php/spiral && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/spiral bundle exec rspec .spec
      - make  -f php/spiral/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: sunrise-router
      commands:
      - cd php/sunrise-router && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/sunrise-router bundle exec rspec .spec
      - make  -f php/sunrise-router/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: sunrise-router-annotations
      commands:
      - cd php/sunrise-router-annotations && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/sunrise-router-annotations bundle exec rspec .spec
      - make  -f php/sunrise-router-annotations/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: sunrise-router-roadrunner
      commands:
      - cd php/sunrise-router-roadrunner && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/sunrise-router-roadrunner bundle exec rspec .spec
      - make  -f php/sunrise-router-roadrunner/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: sw-fw-less
      commands:
      - cd php/sw-fw-less && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/sw-fw-less bundle exec rspec .spec
      - make  -f php/sw-fw-less/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: swoft
      commands:
      - cd php/swoft && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/swoft bundle exec rspec .spec
      - make  -f php/swoft/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: swoole
      commands:
      - cd php/swoole && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/swoole bundle exec rspec .spec
      - make  -f php/swoole/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: swoole-coroutine
      commands:
      - cd php/swoole-coroutine && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/swoole-coroutine bundle exec rspec .spec
      - make  -f php/swoole-coroutine/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: symfony
      commands:
      - cd php/symfony && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/symfony bundle exec rspec .spec
      - make  -f php/symfony/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: ubiquity
      commands:
      - cd php/ubiquity && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/ubiquity bundle exec rspec .spec
      - make  -f php/ubiquity/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: unic
      commands:
      - cd php/unic && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/unic bundle exec rspec .spec
      - make  -f php/unic/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: webman
      commands:
      - cd php/webman && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/webman bundle exec rspec .spec
      - make  -f php/webman/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: workerman
      commands:
      - cd php/workerman && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/workerman bundle exec rspec .spec
      - make  -f php/workerman/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: yii
      commands:
      - cd php/yii && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/yii bundle exec rspec .spec
      - make  -f php/yii/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
    - name: athena
<<<<<<< HEAD
      commands:
      - cd crystal/athena && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/athena bundle exec rspec .spec
      - make  -f crystal/athena/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: shivneri
      commands:
      - cd crystal/shivneri && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/shivneri bundle exec rspec .spec
      - make  -f crystal/shivneri/.Makefile collect
=======
=======
    - name: yii-swoole
>>>>>>> upstream/master
      commands:
      - cd php/yii-swoole && make build  -f .Makefile  && cd -
      - FRAMEWORK=php/yii-swoole bundle exec rspec .spec
      - make  -f php/yii-swoole/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: pony
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: jennet
      commands:
      - cd pony/jennet && make build  -f .Makefile  && cd -
      - FRAMEWORK=pony/jennet bundle exec rspec .spec
      - make  -f pony/jennet/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: python
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: aiohttp
      commands:
<<<<<<< HEAD
      - cd elixir/cowboy && make build  -f .Makefile  && cd -
      - FRAMEWORK=elixir/cowboy bundle exec rspec .spec
      - make  -f elixir/cowboy/.Makefile collect
>>>>>>> upstream/master
=======
      - cd python/aiohttp && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/aiohttp bundle exec rspec .spec
      - make  -f python/aiohttp/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: spider-gazelle
      commands:
      - cd crystal/spider-gazelle && make build  -f .Makefile  && cd -
      - FRAMEWORK=crystal/spider-gazelle bundle exec rspec .spec
      - make  -f crystal/spider-gazelle/.Makefile collect
=======
    - name: cowboy_stream
      commands:
      - cd elixir/cowboy_stream && make build  -f .Makefile  && cd -
      - FRAMEWORK=elixir/cowboy_stream bundle exec rspec .spec
      - make  -f elixir/cowboy_stream/.Makefile collect
>>>>>>> upstream/master
=======
    - name: apidaora
      commands:
      - cd python/apidaora && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/apidaora bundle exec rspec .spec
      - make  -f python/apidaora/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: elixir
=======
    - name: plug
      commands:
      - cd elixir/plug && make build  -f .Makefile  && cd -
      - FRAMEWORK=elixir/plug bundle exec rspec .spec
      - make  -f elixir/plug/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: phoenix
=======
    - name: asgineer
>>>>>>> upstream/master
      commands:
      - cd python/asgineer && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/asgineer bundle exec rspec .spec
      - make  -f python/asgineer/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
- name: scala
>>>>>>> upstream/master
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
<<<<<<< HEAD
    - name: cowboy
      commands:
      - cd elixir/cowboy && make build  -f .Makefile  && cd -
      - FRAMEWORK=elixir/cowboy bundle exec rspec .spec
      - make  -f elixir/cowboy/.Makefile collect
=======
    - name: finch
      commands:
      - cd scala/finch && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/finch bundle exec rspec .spec
      - make  -f scala/finch/.Makefile collect
>>>>>>> upstream/master
=======
    - name: baize-asgi
      commands:
      - cd python/baize-asgi && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/baize-asgi bundle exec rspec .spec
      - make  -f python/baize-asgi/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: cowboy_stream
      commands:
      - cd elixir/cowboy_stream && make build  -f .Makefile  && cd -
      - FRAMEWORK=elixir/cowboy_stream bundle exec rspec .spec
      - make  -f elixir/cowboy_stream/.Makefile collect
=======
    - name: akkahttp
      commands:
      - cd scala/akkahttp && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/akkahttp bundle exec rspec .spec
      - make  -f scala/akkahttp/.Makefile collect
>>>>>>> upstream/master
=======
    - name: baize-wsgi
      commands:
      - cd python/baize-wsgi && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/baize-wsgi bundle exec rspec .spec
      - make  -f python/baize-wsgi/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: plug
      commands:
      - cd elixir/plug && make build  -f .Makefile  && cd -
      - FRAMEWORK=elixir/plug bundle exec rspec .spec
      - make  -f elixir/plug/.Makefile collect
=======
    - name: finatra
      commands:
      - cd scala/finatra && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/finatra bundle exec rspec .spec
      - make  -f scala/finatra/.Makefile collect
>>>>>>> upstream/master
=======
    - name: blacksheep
      commands:
      - cd python/blacksheep && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/blacksheep bundle exec rspec .spec
      - make  -f python/blacksheep/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: phoenix
      commands:
      - cd elixir/phoenix && make build  -f .Makefile  && cd -
      - FRAMEWORK=elixir/phoenix bundle exec rspec .spec
      - make  -f elixir/phoenix/.Makefile collect
=======
    - name: http4s
      commands:
      - cd scala/http4s && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/http4s bundle exec rspec .spec
      - make  -f scala/http4s/.Makefile collect
>>>>>>> upstream/master
=======
    - name: bottle
      commands:
      - cd python/bottle && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/bottle bundle exec rspec .spec
      - make  -f python/bottle/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: scala
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: finch
      commands:
      - cd scala/finch && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/finch bundle exec rspec .spec
      - make  -f scala/finch/.Makefile collect
=======
    - name: play
      commands:
      - cd scala/play && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/play bundle exec rspec .spec
      - make  -f scala/play/.Makefile collect
>>>>>>> upstream/master
=======
    - name: cherrypy
      commands:
      - cd python/cherrypy && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/cherrypy bundle exec rspec .spec
      - make  -f python/cherrypy/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: akkahttp
      commands:
      - cd scala/akkahttp && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/akkahttp bundle exec rspec .spec
      - make  -f scala/akkahttp/.Makefile collect
=======
- name: kotlin
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: kooby
      commands:
      - cd kotlin/kooby && make build  -f .Makefile  && cd -
      - FRAMEWORK=kotlin/kooby bundle exec rspec .spec
      - make  -f kotlin/kooby/.Makefile collect
>>>>>>> upstream/master
=======
    - name: clastic
      commands:
      - cd python/clastic && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/clastic bundle exec rspec .spec
      - make  -f python/clastic/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: finatra
      commands:
      - cd scala/finatra && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/finatra bundle exec rspec .spec
      - make  -f scala/finatra/.Makefile collect
=======
    - name: ktor
      commands:
      - cd kotlin/ktor && make build  -f .Makefile  && cd -
      - FRAMEWORK=kotlin/ktor bundle exec rspec .spec
      - make  -f kotlin/ktor/.Makefile collect
>>>>>>> upstream/master
=======
    - name: cyclone
      commands:
      - cd python/cyclone && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/cyclone bundle exec rspec .spec
      - make  -f python/cyclone/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: http4s
      commands:
      - cd scala/http4s && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/http4s bundle exec rspec .spec
      - make  -f scala/http4s/.Makefile collect
=======
    - name: http4k
      commands:
      - cd kotlin/http4k && make build  -f .Makefile  && cd -
      - FRAMEWORK=kotlin/http4k bundle exec rspec .spec
      - make  -f kotlin/http4k/.Makefile collect
>>>>>>> upstream/master
=======
    - name: django
      commands:
      - cd python/django && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/django bundle exec rspec .spec
      - make  -f python/django/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: play
      commands:
      - cd scala/play && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/play bundle exec rspec .spec
      - make  -f scala/play/.Makefile collect
=======
- name: nim
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: httpbeast
      commands:
      - cd nim/httpbeast && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/httpbeast bundle exec rspec .spec
      - make  -f nim/httpbeast/.Makefile collect
>>>>>>> upstream/master
=======
    - name: django-ninja
      commands:
      - cd python/django-ninja && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/django-ninja bundle exec rspec .spec
      - make  -f python/django-ninja/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: kotlin
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: kooby
      commands:
      - cd kotlin/kooby && make build  -f .Makefile  && cd -
      - FRAMEWORK=kotlin/kooby bundle exec rspec .spec
      - make  -f kotlin/kooby/.Makefile collect
=======
    - name: rosencrantz
      commands:
      - cd nim/rosencrantz && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/rosencrantz bundle exec rspec .spec
      - make  -f nim/rosencrantz/.Makefile collect
>>>>>>> upstream/master
=======
    - name: emmett
      commands:
      - cd python/emmett && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/emmett bundle exec rspec .spec
      - make  -f python/emmett/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: ktor
      commands:
      - cd kotlin/ktor && make build  -f .Makefile  && cd -
      - FRAMEWORK=kotlin/ktor bundle exec rspec .spec
      - make  -f kotlin/ktor/.Makefile collect
=======
    - name: mike
      commands:
      - cd nim/mike && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/mike bundle exec rspec .spec
      - make  -f nim/mike/.Makefile collect
>>>>>>> upstream/master
=======
    - name: falcon
      commands:
      - cd python/falcon && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/falcon bundle exec rspec .spec
      - make  -f python/falcon/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
<<<<<<< HEAD
    - name: http4k
      commands:
      - cd kotlin/http4k && make build  -f .Makefile  && cd -
      - FRAMEWORK=kotlin/http4k bundle exec rspec .spec
      - make  -f kotlin/http4k/.Makefile collect
=======
=======
    - name: scorper
=======
    - name: fastapi
>>>>>>> upstream/master
      commands:
      - cd python/fastapi && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/fastapi bundle exec rspec .spec
      - make  -f python/fastapi/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
>>>>>>> upstream/master
    - name: whip
      commands:
      - cd nim/whip && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/whip bundle exec rspec .spec
      - make  -f nim/whip/.Makefile collect
>>>>>>> upstream/master
=======
    - name: flask
      commands:
      - cd python/flask && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/flask bundle exec rspec .spec
      - make  -f python/flask/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: nim
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: httpbeast
      commands:
      - cd nim/httpbeast && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/httpbeast bundle exec rspec .spec
      - make  -f nim/httpbeast/.Makefile collect
=======
    - name: jester
      commands:
      - cd nim/jester && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/jester bundle exec rspec .spec
      - make  -f nim/jester/.Makefile collect
>>>>>>> upstream/master
=======
    - name: guillotina
      commands:
      - cd python/guillotina && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/guillotina bundle exec rspec .spec
      - make  -f python/guillotina/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: rosencrantz
      commands:
      - cd nim/rosencrantz && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/rosencrantz bundle exec rspec .spec
      - make  -f nim/rosencrantz/.Makefile collect
=======
    - name: akane
=======
    - name: hug
>>>>>>> upstream/master
      commands:
      - cd python/hug && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/hug bundle exec rspec .spec
      - make  -f python/hug/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: index.py
      commands:
      - cd python/index.py && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/index.py bundle exec rspec .spec
      - make  -f python/index.py/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: klein
      commands:
<<<<<<< HEAD
      - cd c/agoo-c && make build  -f .Makefile  && cd -
      - FRAMEWORK=c/agoo-c bundle exec rspec .spec
      - make  -f c/agoo-c/.Makefile collect
>>>>>>> upstream/master
=======
      - cd python/klein && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/klein bundle exec rspec .spec
      - make  -f python/klein/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: mike
      commands:
      - cd nim/mike && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/mike bundle exec rspec .spec
      - make  -f nim/mike/.Makefile collect
=======
    - name: kore
      commands:
      - cd c/kore && make build  -f .Makefile  && cd -
      - FRAMEWORK=c/kore bundle exec rspec .spec
      - make  -f c/kore/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
    - name: whip
      commands:
      - cd nim/whip && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/whip bundle exec rspec .spec
      - make  -f nim/whip/.Makefile collect
=======
    - name: masonite
      commands:
      - cd python/masonite && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/masonite bundle exec rspec .spec
      - make  -f python/masonite/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
    - name: jester
      commands:
      - cd nim/jester && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/jester bundle exec rspec .spec
      - make  -f nim/jester/.Makefile collect
=======
- name: cpp
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: nawa
      commands:
      - cd cpp/nawa && make build  -f .Makefile  && cd -
      - FRAMEWORK=cpp/nawa bundle exec rspec .spec
      - make  -f cpp/nawa/.Makefile collect
>>>>>>> upstream/master
=======
    - name: molten
      commands:
      - cd python/molten && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/molten bundle exec rspec .spec
      - make  -f python/molten/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: akane
      commands:
      - cd nim/akane && make build  -f .Makefile  && cd -
      - FRAMEWORK=nim/akane bundle exec rspec .spec
      - make  -f nim/akane/.Makefile collect
=======
    - name: drogon
      commands:
      - cd cpp/drogon && make build  -f .Makefile  && cd -
      - FRAMEWORK=cpp/drogon bundle exec rspec .spec
      - make  -f cpp/drogon/.Makefile collect
>>>>>>> upstream/master
=======
    - name: nameko
      commands:
      - cd python/nameko && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/nameko bundle exec rspec .spec
      - make  -f python/nameko/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: perl
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: dancer2
      commands:
      - cd perl/dancer2 && make build  -f .Makefile  && cd -
      - FRAMEWORK=perl/dancer2 bundle exec rspec .spec
      - make  -f perl/dancer2/.Makefile collect
=======
    - name: evhtp
      commands:
      - cd cpp/evhtp && make build  -f .Makefile  && cd -
      - FRAMEWORK=cpp/evhtp bundle exec rspec .spec
      - make  -f cpp/evhtp/.Makefile collect
>>>>>>> upstream/master
=======
    - name: pyramid
      commands:
      - cd python/pyramid && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/pyramid bundle exec rspec .spec
      - make  -f python/pyramid/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: c
=======
- name: ruby
>>>>>>> upstream/master
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
<<<<<<< HEAD
    - name: agoo-c
      commands:
      - cd c/agoo-c && make build  -f .Makefile  && cd -
      - FRAMEWORK=c/agoo-c bundle exec rspec .spec
      - make  -f c/agoo-c/.Makefile collect
=======
    - name: rack_app
      commands:
      - cd ruby/rack_app && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/rack_app bundle exec rspec .spec
      - make  -f ruby/rack_app/.Makefile collect
>>>>>>> upstream/master
=======
    - name: quart
      commands:
      - cd python/quart && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/quart bundle exec rspec .spec
      - make  -f python/quart/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: kore
      commands:
      - cd c/kore && make build  -f .Makefile  && cd -
      - FRAMEWORK=c/kore bundle exec rspec .spec
      - make  -f c/kore/.Makefile collect
=======
    - name: grape
      commands:
      - cd ruby/grape && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/grape bundle exec rspec .spec
      - make  -f ruby/grape/.Makefile collect
>>>>>>> upstream/master
=======
    - name: responder
      commands:
      - cd python/responder && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/responder bundle exec rspec .spec
      - make  -f python/responder/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: cpp
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: nawa
      commands:
      - cd cpp/nawa && make build  -f .Makefile  && cd -
      - FRAMEWORK=cpp/nawa bundle exec rspec .spec
      - make  -f cpp/nawa/.Makefile collect
=======
    - name: cuba
      commands:
      - cd ruby/cuba && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/cuba bundle exec rspec .spec
      - make  -f ruby/cuba/.Makefile collect
>>>>>>> upstream/master
=======
    - name: sanic
      commands:
      - cd python/sanic && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/sanic bundle exec rspec .spec
      - make  -f python/sanic/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: drogon
      commands:
      - cd cpp/drogon && make build  -f .Makefile  && cd -
      - FRAMEWORK=cpp/drogon bundle exec rspec .spec
      - make  -f cpp/drogon/.Makefile collect
=======
    - name: agoo
      commands:
      - cd ruby/agoo && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/agoo bundle exec rspec .spec
      - make  -f ruby/agoo/.Makefile collect
>>>>>>> upstream/master
=======
    - name: starlette
      commands:
      - cd python/starlette && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/starlette bundle exec rspec .spec
      - make  -f python/starlette/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: evhtp
      commands:
      - cd cpp/evhtp && make build  -f .Makefile  && cd -
      - FRAMEWORK=cpp/evhtp bundle exec rspec .spec
      - make  -f cpp/evhtp/.Makefile collect
=======
    - name: roda
      commands:
      - cd ruby/roda && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/roda bundle exec rspec .spec
      - make  -f ruby/roda/.Makefile collect
>>>>>>> upstream/master
=======
    - name: tonberry
      commands:
      - cd python/tonberry && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/tonberry bundle exec rspec .spec
      - make  -f python/tonberry/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: ruby
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: rack_app
      commands:
      - cd ruby/rack_app && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/rack_app bundle exec rspec .spec
      - make  -f ruby/rack_app/.Makefile collect
=======
    - name: camping
      commands:
      - cd ruby/camping && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/camping bundle exec rspec .spec
      - make  -f ruby/camping/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
    - name: grape
      commands:
      - cd ruby/grape && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/grape bundle exec rspec .spec
      - make  -f ruby/grape/.Makefile collect
=======
    - name: rack-routing
      commands:
      - cd ruby/rack-routing && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/rack-routing bundle exec rspec .spec
      - make  -f ruby/rack-routing/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
    - name: cuba
      commands:
      - cd ruby/cuba && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/cuba bundle exec rspec .spec
      - make  -f ruby/cuba/.Makefile collect
=======
    - name: rails
      commands:
      - cd ruby/rails && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/rails bundle exec rspec .spec
      - make  -f ruby/rails/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
    - name: agoo
      commands:
      - cd ruby/agoo && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/agoo bundle exec rspec .spec
      - make  -f ruby/agoo/.Makefile collect
=======
    - name: sinatra
      commands:
      - cd ruby/sinatra && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/sinatra bundle exec rspec .spec
      - make  -f ruby/sinatra/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
    - name: roda
      commands:
      - cd ruby/roda && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/roda bundle exec rspec .spec
      - make  -f ruby/roda/.Makefile collect
=======
    - name: hanami-api
      commands:
      - cd ruby/hanami-api && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/hanami-api bundle exec rspec .spec
      - make  -f ruby/hanami-api/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
    - name: camping
      commands:
      - cd ruby/camping && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/camping bundle exec rspec .spec
      - make  -f ruby/camping/.Makefile collect
=======
    - name: syro
      commands:
      - cd ruby/syro && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/syro bundle exec rspec .spec
      - make  -f ruby/syro/.Makefile collect
>>>>>>> upstream/master
=======
    - name: tornado
      commands:
      - cd python/tornado && make build  -f .Makefile  && cd -
      - FRAMEWORK=python/tornado bundle exec rspec .spec
      - make  -f python/tornado/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
    - name: rack-routing
=======
- name: r
  dependencies:
  - setup
  task:
    prologue:
>>>>>>> upstream/master
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: httpuv
      commands:
      - cd r/httpuv && make build  -f .Makefile  && cd -
      - FRAMEWORK=r/httpuv bundle exec rspec .spec
      - make  -f r/httpuv/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: plumber
      commands:
      - cd r/plumber && make build  -f .Makefile  && cd -
      - FRAMEWORK=r/plumber bundle exec rspec .spec
      - make  -f r/plumber/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: restrserve
      commands:
      - cd r/restrserve && make build  -f .Makefile  && cd -
      - FRAMEWORK=r/restrserve bundle exec rspec .spec
      - make  -f r/restrserve/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: rserve
      commands:
<<<<<<< HEAD
      - cd ruby/syro && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/syro bundle exec rspec .spec
      - make  -f ruby/syro/.Makefile collect
=======
- name: julia
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: merly
      commands:
      - cd julia/merly && make build  -f .Makefile  && cd -
      - FRAMEWORK=julia/merly bundle exec rspec .spec
      - make  -f julia/merly/.Makefile collect
>>>>>>> upstream/master
=======
      - cd r/rserve && make build  -f .Makefile  && cd -
      - FRAMEWORK=r/rserve bundle exec rspec .spec
      - make  -f r/rserve/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
<<<<<<< HEAD
<<<<<<< HEAD
- name: julia
=======
- name: javascript
>>>>>>> upstream/master
=======
- name: ruby
>>>>>>> upstream/master
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
<<<<<<< HEAD
<<<<<<< HEAD
    - name: merly
=======
    - name: agoo
>>>>>>> upstream/master
      commands:
      - cd ruby/agoo && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/agoo bundle exec rspec .spec
      - make  -f ruby/agoo/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: camping
      commands:
<<<<<<< HEAD
=======
    - name: feathersjs
      commands:
>>>>>>> upstream/master
      - cd javascript/feathersjs && make build  -f .Makefile  && cd -
      - FRAMEWORK=javascript/feathersjs bundle exec rspec .spec
      - make  -f javascript/feathersjs/.Makefile collect
=======
      - cd ruby/camping && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/camping bundle exec rspec .spec
      - make  -f ruby/camping/.Makefile collect
>>>>>>> upstream/master
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: cuba
      commands:
      - cd ruby/cuba && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/cuba bundle exec rspec .spec
      - make  -f ruby/cuba/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: grape
      commands:
      - cd ruby/grape && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/grape bundle exec rspec .spec
      - make  -f ruby/grape/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: hanami-api
      commands:
      - cd ruby/hanami-api && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/hanami-api bundle exec rspec .spec
      - make  -f ruby/hanami-api/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: rack-routing
      commands:
      - cd ruby/rack-routing && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/rack-routing bundle exec rspec .spec
      - make  -f ruby/rack-routing/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: rack_app
      commands:
      - cd ruby/rack_app && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/rack_app bundle exec rspec .spec
      - make  -f ruby/rack_app/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: rails
      commands:
      - cd ruby/rails && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/rails bundle exec rspec .spec
      - make  -f ruby/rails/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: roda
      commands:
      - cd ruby/roda && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/roda bundle exec rspec .spec
      - make  -f ruby/roda/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: sinatra
      commands:
      - cd ruby/sinatra && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/sinatra bundle exec rspec .spec
      - make  -f ruby/sinatra/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: syro
      commands:
      - cd ruby/syro && make build  -f .Makefile  && cd -
      - FRAMEWORK=ruby/syro bundle exec rspec .spec
      - make  -f ruby/syro/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: rust
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: actix
      commands:
      - cd rust/actix && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/actix bundle exec rspec .spec
      - make  -f rust/actix/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: gotham
      commands:
      - cd rust/gotham && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/gotham bundle exec rspec .spec
      - make  -f rust/gotham/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: iron
      commands:
      - cd rust/iron && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/iron bundle exec rspec .spec
      - make  -f rust/iron/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: nickel
      commands:
      - cd rust/nickel && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/nickel bundle exec rspec .spec
      - make  -f rust/nickel/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: salvo
      commands:
      - cd rust/salvo && make build  -f .Makefile  && cd -
      - FRAMEWORK=rust/salvo bundle exec rspec .spec
      - make  -f rust/salvo/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: scala
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: akkahttp
      commands:
      - cd scala/akkahttp && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/akkahttp bundle exec rspec .spec
      - make  -f scala/akkahttp/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: finatra
      commands:
      - cd scala/finatra && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/finatra bundle exec rspec .spec
      - make  -f scala/finatra/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: finch
      commands:
      - cd scala/finch && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/finch bundle exec rspec .spec
      - make  -f scala/finch/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: http4s
      commands:
      - cd scala/http4s && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/http4s bundle exec rspec .spec
      - make  -f scala/http4s/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: play
      commands:
      - cd scala/play && make build  -f .Makefile  && cd -
      - FRAMEWORK=scala/play bundle exec rspec .spec
      - make  -f scala/play/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
- name: swift
  dependencies:
  - setup
  task:
    prologue:
      commands:
      - cache restore $SEMAPHORE_GIT_SHA
      - cache restore wrk
      - sudo install wrk /usr/local/bin
      - cache restore bin
      - cache restore built-in
      - sem-service start postgres
      - createdb -U postgres -h 0.0.0.0 benchmark
      - psql -U postgres -h 0.0.0.0 -d benchmark < dump.sql
      - bundle config path .cache
      - bundle install
      - bundle exec rake config
    jobs:
    - name: hummingbird-framework
      commands:
      - cd swift/hummingbird-framework && make build  -f .Makefile  && cd -
      - FRAMEWORK=swift/hummingbird-framework bundle exec rspec .spec
      - make  -f swift/hummingbird-framework/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: kitura
      commands:
      - cd swift/kitura && make build  -f .Makefile  && cd -
      - FRAMEWORK=swift/kitura bundle exec rspec .spec
      - make  -f swift/kitura/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: kitura-nio
      commands:
      - cd swift/kitura-nio && make build  -f .Makefile  && cd -
      - FRAMEWORK=swift/kitura-nio bundle exec rspec .spec
      - make  -f swift/kitura-nio/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: perfect
      commands:
      - cd swift/perfect && make build  -f .Makefile  && cd -
      - FRAMEWORK=swift/perfect bundle exec rspec .spec
      - make  -f swift/perfect/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: swifter-framework
      commands:
      - cd swift/swifter-framework && make build  -f .Makefile  && cd -
      - FRAMEWORK=swift/swifter-framework bundle exec rspec .spec
      - make  -f swift/swifter-framework/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
    - name: vapor-framework
      commands:
      - cd swift/vapor-framework && make build  -f .Makefile  && cd -
      - FRAMEWORK=swift/vapor-framework bundle exec rspec .spec
      - make  -f swift/vapor-framework/.Makefile collect
      - bundle exec rake db:raw_export
      env_vars:
      - name: DATABASE_URL
        value: postgresql://postgres@0.0.0.0/benchmark
      - name: DURATION
        value: '10'
      - name: CONCURRENCIES
        value: '64'
      - name: ROUTES
        value: GET:/
